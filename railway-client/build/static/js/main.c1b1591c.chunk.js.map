{"version":3,"sources":["serviceWorker.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","common/validators.js","components/RouteWithLayout/RouteWithLayout.js","actions/signin.js","actions/types.js","layouts/components/Menubar/Menubar.js","layouts/components/Topbar/Topbar.js","layouts/components/Footer/Footer.js","layouts/Minimal/Minimal.js","views/NotFound/NotFound.js","views/Common/ErrorDisplay.js","views/Common/Spinner.js","views/SignIn/SignIn.js","views/ItemInventory/DialogTitle.js","actions/ItemInventory.js","views/ItemInventory/AddInventory.js","actions/goods.js","views/ItemInventory/ItemInventoryList.js","views/ItemsList/DialogTitle.js","views/ItemsList/ItemAdd.js","views/ItemsList/ItemsList.js","Routes.js","utils/axios.js","actions/token.js","App.js","reducers/signin.js","reducers/goods.js","reducers/token.js","reducers/ItemInventory.js","reducers/index.js","services/signInApi.js","sagas/signIn.js","services/goodsApi.js","sagas/goods.js","services/token.js","sagas/token.js","services/ItemInventory.js","sagas/ItemInventory.js","sagas/index.js","Root.js","index.js"],"names":["Boolean","window","location","hostname","match","white","black","primary","contrastText","dark","colors","indigo","main","light","secondary","blue","success","green","info","warning","orange","error","red","text","blueGrey","link","standard","background","default","paper","icon","divider","grey","h1","color","palette","fontWeight","fontSize","letterSpacing","lineHeight","h2","h3","h4","textAlign","font","opacity","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","textTransform","MuiButton","contained","boxShadow","backgroundColor","MuiIconButton","root","MuiPaper","elevation1","MuiTableCell","typography","borderBottom","MuiTableHead","MuiTypography","gutterBottom","marginBottom","theme","createTheme","overrides","zIndex","appBar","drawer","checked","value","options","message","withRouter","props","Layout","layout","Component","component","rest","render","matchProps","logout","payload","type","loginWithUserPassSuccess","loginWithUserPassFailed","useStyles","makeStyles","paddingTop","position","height","flexGrow","img","width","logoWrapper","display","alignItems","mainFont","textBox","padding","subtitle","linkItem","paddingBottom","selectedLinkItem","toolBar","gap","profile","placeItems","paddingLeft","float","connect","loginsuccess","signin","currentLocation","useLocation","classes","token","sessionStorage","getItem","className","clsx","Fragment","Typography","inline","variant","Button","onClick","removeItem","AppBar","Toolbar","to","pathname","Topbar","alt","src","spacing","bottom","justifyContent","footerDiv","fontFamily","paddingRight","footerText","Footer","Minimal","children","isMainLayout","content","image","marginTop","maxWidth","NotFound","Grid","container","justify","item","lg","xs","errorDisplay","refreshButtonStyle","ErrorDisplay","refreshButton","style","reload","spinnerStyle","Spinner","LinearProgress","CircularProgress","borderRadius","flexDirection","avatar","margin","form","submit","otpClass","loading","loginSuccess","loginWithUserPassword","useState","username","setUsername","password","setPassword","Container","CssBaseline","Avatar","noValidate","TextField","fullWidth","id","label","name","autoFocus","onChange","event","target","disabled","length","DialogTitle","withStyles","closeButton","cursor","top","right","onClose","other","disableTypography","IconButton","aria-label","onTouchEnd","getLookupValuesSuccess","getLookupValuesFailed","submitItemInventoryCreateSuccess","submitItemInventoryCreateFailed","getInventoryListSuccess","getInventoryListFailed","Alert","elevation","model","inputrow","breakpoints","down","datePicker","inputLabel","inputFeild","titleRow","deleteIcon","confirmationDialog","confirmationActions","deleteConfirmBtn","validateMsg","createSession","PaperComponent","handle","cancel","Paper","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","SubmitButton","itemInventory","confirmation","submitItemInventoryCreate","submitItemInventoryCreateReset","submitFormItemRemove","seletedRowData","submitFormItemCreate","fetchExistingItemsInventory","random","useEffect","setEditMode","setOpen","setLoading","handleClose","handleSessionFormReset","handleResetSessionObj","React","open","editMode","itemName","setItemName","quantity","setQuantity","unitType","setUnitType","shedStoreNo","setShedStoreNo","description","setDescription","supervisorName","setSupervisorName","handoverTo","setHandoverTo","itemInventoryType","setItemInventoryType","validForm","unitsEntity","sessionCreated","statusMessage","sessionUpdated","sessionDeleted","confirmed","endIcon","align","Dialog","aria-labelledby","disableBackdropClick","PaperProps","dividers","severity","required","tmpSessionVaccines","Math","abs","InputProps","startAdornment","InputAdornment","inputProps","min","max","RadioGroup","row","FormControlLabel","control","Radio","buttonStyle","parseFloat","inventoryType","goodsId","fetchDistrictFailed","notifyAllSuccess","notifyAllFailed","fetchSessionsSuccess","fetchSessionsFailed","cancelSessionSuccess","cancelSessionFailed","fetchCancelledSessionsFailed","fetchUnitTyps","fetchUnitTypsFailed","submitFormItemCreateSuccess","submitFormItemCreateFailed","submitFormItemUpdateSuccess","submitFormItemUpdateFailed","fetchItemsSuccess","fetchItemsFailed","submitFormItemRemoveSuccess","submitFormItemRemoveFailed","fetchItemCategory","fetchItemCategorySuccess","fetchItemCategoryFailed","marginLeft","marginRight","up","buttons","tableHeader","tableHeaderTitle","tableCell","minWidth","cancellationMsg","filterRow","searchWrapper","alertWrapper","StyledTableRow","action","hover","TableRow","StyledTableCell","head","common","body","TableCell","goods","itemCategoryList","unitTypes","itemList","nameLookups","data","itemsInventoryList","inventory","categoryList","unitList","totalCount","getLookupValues","getInventoryList","getInventoryListReset","searchItemName","setSearchItemName","page","setPage","rowsPerPage","setRowsPerPage","select","setSelection","setItem","itemCategory","setItemCategory","setInventoryType","updateItemList","Autocomplete","getOptionLabel","option","renderInput","params","newValue","pageSize","pageNo","totalQuantity","filter","res","unit","TableContainer","Table","table","TableHead","inventoryItem","getUnitName","TableBody","map","index","key","date","split","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","unitTypeList","submitFormItemUpdate","resetItemCreateForm","fetchCancelledSessions","selectedDataRow","setSelectedDataRow","setSelectedDataToForm","todayDate","Date","tomorrowDate","setDate","getDate","openAlert","setOpenAlert","minQuantity","setMinQuantity","notes","setNotes","moment","format","HTML5_FMT","DATE","selectedData","selectedUnitType","units","selectedItemCategory","category","handleCloseAlert","aria-describedby","temp","toString","goodName","unitId","userId","highlightRow","notHighlightRow","items","itemsList","fetchItems","fetchItemsReset","isOpenAlertMsgProp","fetchUnitTypsList","innerWidth","setIsMobile","isMobile","addEventListener","categoryId","scope","selectedItem","ramdomId","Routes","exact","from","path","SignInView","MinimalLayout","ItemInventoryView","ItemsListView","NotFoundView","axios","defaults","baseURL","process","createAxiosResponseInterceptor","interceptors","response","use","a","errorResponse","status","Promise","reject","getRefreshTokenSuccess","getRefreshTokenFailed","browserHistory","createBrowserHistory","validate","validators","request","config","headers","App","idleTimer","handleOnAction","bind","handleOnActive","handleOnIdle","this","ref","timeout","onActive","onIdle","onAction","debounce","ThemeProvider","history","getRefreshToken","initialState","undefined","signinReducer","state","totalPage","goodsReducer","error_msg","tokenReducer","ItemInventoryReducer","console","log","combineReducers","loginApi","post","then","loginWithUserPassSaga","watchSignInActions","signInSaga","call","signInApi","put","takeLatest","all","Items","update","delete","Authorization","getAll","get","Category","notifyAllUsers","fetchDistricts","fetchSessionsData","deleteItemFormData","resetItemForm","cancelSessions","fetchCancelledSessionsList","fetchUnitTypes","submitFormItem","updateFormItem","watchSessionActions","GoodsSaga","sessionApi","notify","notifyAll","error_code","timestamp","districts","getDistricts","sessions","restFormItemSuccess","getCancelledSessionList","getToken","getTokenSaga","watchTokenActions","tokenSaga","tokenApi","href","clear","fetchLookupData","createInventory","fetchInvenoryList","fetchItemsLookup","fetchInventoryList","watchLocationActions","locationSaga","sagas","ItemInventory","loggerMiddleware","createLogger","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","forEach","saga","run","registerSagasWithMiddleware","ReactDOM","Root","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c1b1591c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.1/8 is considered localhost for IPv4.\r\n        window.location.hostname.match(\r\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n        )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null &&\r\n                    contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import { colors } from \"@material-ui/core\";\r\n\r\nconst white = \"#FFFFFF\";\r\nconst black = \"#000000\";\r\nconst green = \"#00e676\";\r\n\r\nexport default {\r\n    black,\r\n    white,\r\n    primary: {\r\n        contrastText: white,\r\n        dark: colors.indigo[900],\r\n        main: colors.indigo[500],\r\n        light: colors.indigo[100],\r\n    },\r\n    secondary: {\r\n        contrastText: white,\r\n        dark: colors.blue[900],\r\n        main: colors.blue[\"A400\"],\r\n        light: colors.blue[\"A400\"],\r\n    },\r\n    success: {\r\n        contrastText: white,\r\n        dark: colors.green[900],\r\n        main: colors.green[600],\r\n        light: colors.green[400],\r\n    },\r\n    info: {\r\n        contrastText: white,\r\n        dark: colors.blue[900],\r\n        main: colors.blue[600],\r\n        light: colors.blue[400],\r\n    },\r\n    warning: {\r\n        contrastText: white,\r\n        dark: colors.orange[900],\r\n        main: colors.orange[600],\r\n        light: colors.orange[400],\r\n    },\r\n    error: {\r\n        contrastText: white,\r\n        dark: colors.red[900],\r\n        main: colors.red[600],\r\n        light: colors.red[400],\r\n    },\r\n    text: {\r\n        primary: colors.blueGrey[900],\r\n        secondary: colors.blueGrey[600],\r\n        link: colors.blue[600],\r\n        standard: \"#054D9E\",\r\n    },\r\n    background: {\r\n        default: \"#F6F6F6\",\r\n        paper: white,\r\n    },\r\n    icon: { primary: \"#006066\", secondary: green },\r\n    divider: colors.grey[200],\r\n};\r\n","import palette from './palette';\r\n\r\nexport default {\r\n    h1: {\r\n        color: palette.text.primary,\r\n        fontWeight: 500,\r\n        fontSize: '35px',\r\n        letterSpacing: '-0.24px',\r\n        lineHeight: '40px',\r\n    },\r\n    h2: {\r\n        color: palette.text.primary,\r\n        fontWeight: 500,\r\n        fontSize: '29px',\r\n        letterSpacing: '-0.24px',\r\n        lineHeight: '32px',\r\n    },\r\n    h3: {\r\n        color: palette.text.primary,\r\n        fontWeight: 500,\r\n        fontSize: '24px',\r\n        letterSpacing: '-0.06px',\r\n        lineHeight: '28px',\r\n    },\r\n    h4: {\r\n        color: palette.text.standard,\r\n        fontWeight: 500,\r\n        fontSize: '20px',\r\n        lineHeight: '24px',\r\n        textAlign: 'left',\r\n        font: 'normal normal 600 45px/60px Segoe UI',\r\n        letterSpacing: '0px',\r\n        opacity: 1,\r\n    },\r\n    h5: {\r\n        color: palette.text.primary,\r\n        fontWeight: 500,\r\n        fontSize: '16px',\r\n        letterSpacing: '-0.05px',\r\n        lineHeight: '20px',\r\n    },\r\n    h6: {\r\n        color: palette.text.primary,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        letterSpacing: '-0.05px',\r\n        lineHeight: '20px',\r\n    },\r\n    subtitle1: {\r\n        color: palette.text.primary,\r\n        fontSize: '16px',\r\n        letterSpacing: '-0.05px',\r\n        lineHeight: '25px',\r\n    },\r\n    subtitle2: {\r\n        color: palette.text.secondary,\r\n        fontWeight: 400,\r\n        fontSize: '14px',\r\n        letterSpacing: '-0.05px',\r\n        lineHeight: '21px',\r\n    },\r\n    body1: {\r\n        color: palette.text.primary,\r\n        fontSize: '14px',\r\n        letterSpacing: '-0.05px',\r\n        lineHeight: '21px',\r\n    },\r\n    body2: {\r\n        color: palette.text.secondary,\r\n        fontSize: '12px',\r\n        letterSpacing: '-0.04px',\r\n        lineHeight: '18px',\r\n    },\r\n    button: {\r\n        color: palette.text.primary,\r\n        fontSize: '14px',\r\n    },\r\n    caption: {\r\n        color: palette.text.secondary,\r\n        fontSize: '11px',\r\n        letterSpacing: '0.33px',\r\n        lineHeight: '13px',\r\n    },\r\n    overline: {\r\n        color: palette.text.secondary,\r\n        fontSize: '11px',\r\n        fontWeight: 500,\r\n        letterSpacing: '0.33px',\r\n        lineHeight: '13px',\r\n        textTransform: 'uppercase',\r\n    },\r\n};\r\n","import MuiButton from './MuiButton';\r\nimport MuiIconButton from './MuiIconButton';\r\nimport MuiPaper from './MuiPaper';\r\nimport MuiTableCell from './MuiTableCell';\r\nimport MuiTableHead from './MuiTableHead';\r\nimport MuiTypography from './MuiTypography';\r\n\r\nexport default {\r\n    MuiButton,\r\n    MuiIconButton,\r\n    MuiPaper,\r\n    MuiTableCell,\r\n    MuiTableHead,\r\n    MuiTypography,\r\n};\r\n","export default {\r\n    contained: {\r\n        boxShadow:\r\n            '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\r\n        backgroundColor: '#FFFFFF',\r\n    },\r\n};\r\n","import palette from '../palette';\r\n\r\nexport default {\r\n    root: {\r\n        color: palette.icon,\r\n        '&:hover': {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.03)',\r\n        },\r\n    },\r\n};\r\n","export default {\r\n    elevation1: {\r\n        boxShadow:\r\n            '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)',\r\n    },\r\n};\r\n","import palette from '../palette';\r\nimport typography from '../typography';\r\n\r\nexport default {\r\n    root: {\r\n        ...typography.body1,\r\n        borderBottom: `1px solid ${palette.divider}`,\r\n    },\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nexport default {\r\n    root: {\r\n        backgroundColor: colors.grey[50],\r\n    },\r\n};\r\n","export default {\r\n    gutterBottom: {\r\n        marginBottom: 8,\r\n    },\r\n};\r\n","import { createTheme  } from '@material-ui/core';\r\n\r\nimport palette from './palette';\r\nimport typography from './typography';\r\nimport overrides from './overrides';\r\n\r\nconst theme = createTheme ({\r\n    palette,\r\n    typography,\r\n    overrides,\r\n    zIndex: {\r\n        appBar: 100,\r\n        drawer: 1200,\r\n    },\r\n});\r\n\r\nexport default theme;\r\n","const checked = (value, options) => {\r\n    if (value !== true) {\r\n        return options.message || 'must be checked';\r\n    }\r\n};\r\n\r\nexport default {\r\n    checked,\r\n};\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst RouteWithLayout = props => {\r\n    const { layout: Layout, component: Component, ...rest } = props;\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={matchProps => {\r\n                return (\r\n                    <Layout>\r\n                        <Component {...matchProps} />\r\n                    </Layout>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nRouteWithLayout.propTypes = {\r\n    component: PropTypes.any.isRequired,\r\n    layout: PropTypes.any.isRequired,\r\n    path: PropTypes.string,\r\n};\r\n\r\nexport default withRouter(RouteWithLayout);\r\n","import {\r\n    LOGOUT,\r\n    LOGIN_WITH_USER_PASS,\r\n    LOGIN_WITH_USER_PASS_SUCCESS,\r\n    LOGIN_WITH_USER_PASS_FAILED,\r\n} from './types';\r\n\r\nexport const logout = payload => {\r\n    return { type: LOGOUT, payload };\r\n};\r\n\r\n\r\n/*********************************************** */\r\nexport const loginWithUserPassword = payload => {\r\n    return { type: LOGIN_WITH_USER_PASS, payload };\r\n};\r\n\r\nexport const loginWithUserPassSuccess = payload => {\r\n    return { type: LOGIN_WITH_USER_PASS_SUCCESS, payload };\r\n};\r\n\r\nexport const loginWithUserPassFailed = payload => {\r\n    return { type: LOGIN_WITH_USER_PASS_FAILED, payload };\r\n};\r\n","/**\r\n * ================== Sign in Related Tasks ============================\r\n */\r\n\r\nexport const REQUEST_OTP = 'REQUEST_OTP';\r\nexport const REQUEST_OTP_SUCCESS = 'REQUEST_OTP_SUCCESS';\r\nexport const REQUEST_OTP_FAILED = 'REQUEST_OTP_FAILED';\r\nexport const OTP_ENTERED = 'OTP_ENTERED';\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\n\r\n\r\n\r\nexport const FETCH_SESSIONS = 'FETCH_SESSIONS';\r\nexport const FETCH_SESSIONS_SUCCESS = 'FETCH_SESSIONS_SUCCESS';\r\nexport const FETCH_SESSIONS_FAILED = 'FETCH_SESSIONS_FAILED';\r\n\r\n\r\n\r\n/**\r\n * ================== Sesison Related Tasks ends============================\r\n */\r\n\r\n/**\r\n * ================== Registration List Related Tasks ============================\r\n */\r\n\r\nexport const FETCH_REGISTERED_USERS = 'FETCH_REGISTERED_USERS';\r\nexport const FETCH_REGISTERED_USERS_SUCCESS = 'FETCH_REGISTERED_USERS_SUCCESS';\r\nexport const FETCH_REGISTERED_USERS_FAILED = 'FETCH_REGISTERED_USERS_FAILED';\r\nexport const RESET_REGISTERED_USERS = 'RESET_REGISTERED_USERS';\r\nexport const UPDATE_STATE_REGISTER = 'UPDATE_STATE_REGISTER';\r\n\r\n/**\r\n * ================== Registration List Related Tasks Ends ============================\r\n */\r\n\r\n /**\r\n * ================== Get Refresh Token Related Tasks ============================\r\n */\r\n\r\nexport const FETCH_REFRESH_TOKEN = 'FETCH_REFRESH_TOKEN';\r\nexport const FETCH_REFRESH_TOKEN_SUCCESS = 'FETCH_REFRESH_TOKEN_SUCCESS';\r\nexport const FETCH_REFRESH_TOKEN_FAILED = 'FETCH_REFRESH_TOKEN_FAILED';\r\nexport const RESET_REFRESH_TOKEN = 'RESET_REFRESH_TOKEN';\r\n\r\n/**\r\n * ================== Get Refresh Token Related Tasks Ends ============================\r\n */\r\n\r\n/**\r\n * ================== District MOH ============================\r\n */\r\n\r\nexport const FETCH_DISTRICT = 'FETCH_DISTRICT';\r\nexport const FETCH_DISTRICT_SUCCESS = 'FETCH_DISTRICT_SUCCESS';\r\nexport const FETCH_DISTRICT_FAILED = 'FETCH_DISTRICT_FAILED';\r\n\r\n/**\r\n * ================== District Ends ============================\r\n */\r\n\r\n/**\r\n * ================== Notify All ============================\r\n */\r\n\r\n export const NOTIFY_ALL = 'NOTIFY_ALL';\r\n export const NOTIFY_ALL_SUCCESS = 'NOTIFY_ALL_SUCCESS';\r\n export const NOTIFY_ALL_FAILED = 'NOTIFY_ALL_FAILED';\r\n export const NOTIFY_ALL_RESET = 'NOTIFY_ALL_RESET';\r\n /**\r\n  * ================== Notify All Ends ============================\r\n  */\r\n\r\n /**\r\n * ================== Dashboard ============================\r\n */\r\n\r\n    export const FETCH_DASHBOARD = 'FETCH_DASHBOARD';\r\n    export const FETCH_DASHBOARD_SUCCESS = 'FETCH_DASHBOARD_SUCCESS';\r\n    export const FETCH_DASHBOARD_FAILED = 'FETCH_DASHBOARD_FAILED';\r\n    export const RESET_DASHBOARD = 'RESET_DASHBOARD';\r\n \r\n  /**\r\n   * ================== Dashboard Ends ============================\r\n   */\r\n\r\n  /**\r\n * ================== Disabled Notification Button ============================\r\n */\r\n\r\n   export const DISABLED_NOTIFY_BUTTON = 'DISABLED_NOTIFY_BUTTON';\r\n  \r\n /**\r\n  * ================== Disabled Notification Button ============================\r\n  */\r\n\r\n /**\r\n * ================== Location ============================\r\n */\r\n\r\n  export const FETCH_LOCATION = 'FETCH_LOCATION';\r\n  export const FETCH_LOCATION_SUCCESS = 'FETCH_LOCATION_SUCCESS';\r\n  export const FETCH_LOCATION_FAILED = 'FETCH_LOCATION_FAILED';\r\n  export const RESET_LOCATION = 'RESET_LOCATION';\r\n\r\n/**\r\n * ================== Location Ends ============================\r\n */\r\n\r\n /**\r\n * ================== Cancel Sessions ============================\r\n */\r\n\r\n  export const CANCEL_SESSION = 'CANCEL_SESSION';\r\n  export const CANCEL_SESSION_SUCCESS = 'CANCEL_SESSION_SUCCESS';\r\n  export const CANCEL_SESSION_FAILED = 'CANCEL_SESSION_FAILED';\r\n  export const CANCEL_SESSION_RESET = 'CANCEL_SESSION_RESET';\r\n\r\n/**\r\n * ================== Cancel Sessions Ends ============================\r\n */\r\n\r\n/**\r\n * ================== Fetch Cancelled Sessions ============================\r\n */\r\n\r\n export const FETCH_CANCELLED_SESSIONS = 'FETCH_CANCELLED_SESSIONS';\r\n export const FETCH_CANCELLED_SESSIONS_SUCCESS = 'FETCH_CANCELLED_SESSIONS_SUCCESS';\r\n export const FETCH_CANCELLED_SESSIONS_FAILED = 'FETCH_CANCELLED_SESSIONS_FAILED';\r\n\r\n/**\r\n* ================== Fetch Cancelled Sessions Ends ============================\r\n*/\r\n\r\n \r\n\r\n\r\n/**---------------------------------------------------------------------------------- */\r\n\r\n export const LOGIN_WITH_USER_PASS = 'LOGIN_WITH_USER_PASS';\r\n export const LOGIN_WITH_USER_PASS_SUCCESS = 'LOGIN_WITH_USER_PASS_SUCCESS';\r\n export const LOGIN_WITH_USER_PASS_FAILED = 'LOGIN_WITH_USER_PASS_FAILED';\r\n export const LOGIN_WITH_USER_PASS_RESET = 'LOGIN_WITH_USER_PASS_RESET';\r\n\r\n\r\n/**\r\n * ================== Fetch Vaccien Types ============================\r\n */\r\n\r\n export const FETCH_UNIT_TYPE = 'FETCH_UNIT_TYPE';\r\n export const FETCH_UNIT_TYPE_SUCCESS = 'FETCH_UNIT_TYPE_SUCCESS';\r\n export const FETCH_UNIT_TYPE_FAILED = 'FETCH_UNIT_TYPE_FAILED';\r\n\r\n/**\r\n* ================== Fetch Vaccine Types Ends ============================\r\n*/\r\n\r\n/**\r\n* ================== Create items ============================\r\n*/\r\nexport const SUBMIT_FORM_ITEM = 'SUBMIT_FORM_ITEM';\r\nexport const SUBMIT_FORM_ITEM_SUCCESS = 'SUBMIT_FORM_ITEM_SUCCESS';\r\nexport const SUBMIT_FORM_ITEM_FAILED = 'SUBMIT_FORM_ITEM_FAILED';\r\n\r\n/**\r\n* ================== Create items Ends ============================\r\n*/\r\n\r\n/**\r\n* ================== Update items Ends ============================\r\n*/\r\n\r\nexport const UPDATE_FORM_ITEM = 'UPDATE_FORM_ITEM';\r\nexport const UPDATE_FORM_ITEM_SUCCESS = 'UPDATE_FORM_ITEM_SUCCESS';\r\nexport const UPDATE_FORM_ITEM_FAILED = 'UPDATE_FORM_ITEM_FAILED';\r\n\r\n/**\r\n* ================== Update items Ends ============================\r\n*/\r\n\r\nexport const RESET_FORM_ITEM = 'RESET_FORM_ITEM';\r\nexport const RESET_FORM_ITEM_SUCCESS = 'RESET_FORM_ITEM_SUCCESS';\r\n\r\n/**\r\n * ================== Fetch Items ============================\r\n */\r\n\r\n export const FETCH_ITEMS = 'FETCH_ITEMS';\r\n export const FETCH_ITEMS_SUCCESS = 'FETCH_ITEMS_SUCCESS';\r\n export const FETCH_ITEMS_FAILED = 'FETCH_ITEMS_FAILED';\r\n export const FETCH_ITEMS_RESET = 'FETCH_ITEMS_RESET';\r\n \r\n /**\r\n  * ================== Fetch Items Tasks ============================\r\n  */\r\n\r\n\r\nexport const DELETE_FORM_ITEM = 'DELETE_FORM_ITEM';\r\nexport const DELETE_FORM_ITEM_SUCCESS = 'DELETE_FORM_ITEM_SUCCESS';\r\nexport const DELETE_FORM_ITEM_FAILED = 'DELETE_FORM_ITEM_FAILED';\r\n\r\n/**\r\n * ================== Selected Sessions For Dashboard ============================\r\n */\r\n\r\n export const FETCH_LOOKUP_ITEMS = 'FETCH_LOOKUP_ITEMS';\r\n export const FETCH_LOOKUP_ITEMS_SUCCESS = 'FETCH_LOOKUP_ITEMS_SUCCESS';\r\n export const FETCH_LOOKUP_ITEMS_FAILED = 'FETCH_LOOKUP_ITEMS_FAILED';\r\n export const FETCH_LOOKUP_ITEMS_RESET = 'FETCH_LOOKUP_ITEMS_RESET';\r\n\r\n/**\r\n* ================== Selected Sessions For Dashboard Ends ============================\r\n*/\r\n\r\n/**\r\n * ================== Create Inventory ============================\r\n */\r\n\r\n export const CREATE_INVENTORY = 'CREATE_INVENTORY';\r\n export const CREATE_INVENTORY_SUCCESS = 'CREATE_INVENTORY_SUCCESS';\r\n export const CREATE_INVENTORY_FAILED = 'CREATE_INVENTORY_FAILED';\r\n export const CREATE_INVENTORY_RESET = 'CREATE_INVENTORY_RESET';\r\n\r\n/**\r\n* ================== Create Inventory Ends ============================\r\n*/\r\n\r\n/**\r\n * ================== get created Inventory ============================\r\n */\r\n\r\n export const FETCH_INVENTORY = 'FETCH_INVENTORY';\r\n export const FETCH_INVENTORY_SUCCESS = 'FETCH_INVENTORY_SUCCESS';\r\n export const FETCH_INVENTORY_FAILED = 'FETCH_INVENTORY_FAILED';\r\n export const FETCH_INVENTORY_RESET = 'FETCH_INVENTORY_RESET';\r\n\r\n/**\r\n* ================== get created Inventory Ends ============================\r\n*/\r\n\r\n\r\n/**\r\n * ================== get ItemCategory ============================\r\n */\r\n\r\n export const FETCH_CATEGORY = 'FETCH_CATEGORY';\r\n export const FETCH_CATEGORY_SUCCESS = 'FETCH_CATEGORY_SUCCESS';\r\n export const FETCH_CATEGORY_FAILED = 'FETCH_CATEGORY_FAILED';\r\n export const FETCH_CATEGORY_RESET = 'FETCH_CATEGORY_RESET';\r\n\r\n/**\r\n* ================== get get ItemCategory Ends ============================\r\n*/\r\n","import React from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { logout } from \"actions/signin\";\r\nimport { connect } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\n//import jwt_decode from \"jwt-decode\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    boxShadow: \"none\",\r\n    backgroundColor: \"white\",\r\n    zIndex: 100,\r\n    paddingTop: \"20px\",\r\n    position: \"inherit\",\r\n    height: \"47px\",\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1,\r\n  },\r\n  img: {\r\n    width: 100,\r\n  },\r\n  logoWrapper: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  mainFont: {\r\n    color: \"#004F8B\",\r\n    \"font-size\": \"15px\",\r\n    \"font-weight\": 1000,\r\n  },\r\n  textBox: {\r\n    padding: \"10px\",\r\n  },\r\n  subtitle: {\r\n    color: \"#848484\",\r\n  },\r\n  linkItem: {\r\n    color: \"#848484\",\r\n    paddingBottom: \"30px\",\r\n    \"&:hover\": {\r\n      color: \"#004F8B\",\r\n      paddingBottom: \"28px\",\r\n      borderBottom: \"2px solid #004F8B\",\r\n    },\r\n  },\r\n  selectedLinkItem: {\r\n    color: \"#004F8B\",\r\n    paddingBottom: \"28px\",\r\n    borderBottom: \"2px solid #004F8B\",\r\n  },\r\n\r\n  toolBar: {\r\n    gap: \"30px\",\r\n  },\r\n  profile: {\r\n    display: \"flex\",\r\n    alignItems: \"baseline\",\r\n    placeItems: \"baseline\",\r\n    paddingLeft: \"20px\",\r\n    float: \"right\",\r\n  },\r\n  logout: {\r\n    color: \"#004F8B\",\r\n  },\r\n}));\r\n\r\nconst Menubar = ({ logout, loginsuccess }) => {\r\n  const currentLocation = useLocation();\r\n  const classes = useStyles();\r\n\r\n  const handleLogout = () => {\r\n    sessionStorage.removeItem(\"token\");\r\n    sessionStorage.removeItem(\"loginSuccess\");\r\n    sessionStorage.removeItem(\"mobile\");\r\n    window.location = \"/sign-in\";\r\n    logout();\r\n  };\r\n\r\n  var token = sessionStorage.getItem(\"token\");\r\n  //var decoded = jwt_decode(token ? token : null);\r\n  return (\r\n    <div className={clsx(classes.flexGrow)}>\r\n      {token ? (\r\n        <React.Fragment>\r\n          <div className={classes.profile}>\r\n            <Typography\r\n              inline=\"true\"\r\n              component=\"h2\"\r\n              variant=\"h5\"\r\n              className={classes.subtitle}\r\n            >\r\n              Hello {/*  {decoded} */} !\r\n            </Typography>\r\n            <div>\r\n              <Button className={classes.logout} onClick={handleLogout}>\r\n                Logout\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <AppBar className={clsx(classes.root)}>\r\n              <Toolbar\r\n                component=\"nav\"\r\n                variant=\"dense\"\r\n                className={clsx(classes.toolBar)}\r\n              >\r\n                <RouterLink to=\"/item-list\">\r\n                  <Typography\r\n                    inline=\"true\"\r\n                    component=\"h2\"\r\n                    variant=\"h5\"\r\n                    className={\r\n                      (classes.subtitle,\r\n                      currentLocation.pathname === \"/item-list\"\r\n                        ? classes.selectedLinkItem\r\n                        : classes.linkItem)\r\n                    }\r\n                  >\r\n                    Items\r\n                  </Typography>\r\n                </RouterLink>\r\n                <RouterLink to=\"/update-inventory\">\r\n                  <Typography\r\n                    inline=\"true\"\r\n                    component=\"h2\"\r\n                    variant=\"h5\"\r\n                    className={\r\n                      (classes.subtitle,\r\n                      currentLocation.pathname === \"/update-inventory\"\r\n                        ? classes.selectedLinkItem\r\n                        : classes.linkItem)\r\n                    }\r\n                  >\r\n                    Inventory\r\n                  </Typography>\r\n                </RouterLink>\r\n              </Toolbar>\r\n            </AppBar>\r\n          </div>\r\n        </React.Fragment>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nMenubar.propTypes = {\r\n  className: PropTypes.string,\r\n  onSidebarOpen: PropTypes.func,\r\n};\r\n\r\nfunction mapStateToProps({ signin }) {\r\n  let { loginsuccess } = signin;\r\n  return {\r\n    loginsuccess,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  logout,\r\n})(Menubar);\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\r\nimport Menubar from '../Menubar/Menubar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        boxShadow: 'none',\r\n        backgroundColor: 'white',\r\n        zIndex: 100,\r\n        padding: '20px',\r\n        position: 'inherit',\r\n        marginBottom: '30px',\r\n    },\r\n    flexGrow: {\r\n        flexGrow: 1,\r\n    },\r\n    img: {\r\n        width: 60,\r\n    },\r\n    logoWrapper: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    mainFont: {\r\n        color: '#004F8B',\r\n        'font-size': '20px',\r\n        'font-weight': 1000,\r\n    },\r\n    textBox: {\r\n        padding: '10px',\r\n    },\r\n    subtitle: {\r\n        color: '#848484',\r\n    },\r\n}));\r\n\r\nconst Topbar = props => {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar className={clsx(classes.root)}>\r\n            <Toolbar className={clsx(classes.toolBar)}>\r\n                <div className={classes.logoWrapper}>\r\n                    <RouterLink to=\"/dashboard\">\r\n                        <img\r\n                            className={classes.img}\r\n                            alt=\"Logo\"\r\n                            src=\"/images/logos/moh-logo-2.png\"\r\n                        />\r\n                    </RouterLink>\r\n                    <div className={classes.textBox}>\r\n                        {/* <Typography variant=\"h3\" className={classes.mainFont}>\r\n                            COVID-19\r\n                        </Typography> */}\r\n                        <Typography variant=\"h3\" className={classes.mainFont}>\r\n                            Inventory System\r\n                        </Typography>\r\n                        <hr />\r\n                        <Typography\r\n                            inline=\"true\"\r\n                            component=\"h2\"\r\n                            variant=\"h5\"\r\n                            className={classes.subtitle}\r\n                        >\r\n                            Sri Lanka Railway\r\n                        </Typography>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.flexGrow} />\r\n            </Toolbar>\r\n\r\n            {/* sessionStorage.getItem('token') !== null ?  */<Menubar /> /* : null */}\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nTopbar.propTypes = {\r\n    className: PropTypes.string,\r\n    onSidebarOpen: PropTypes.func,\r\n};\r\n\r\nexport default Topbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(4),\r\n        bottom: 0,\r\n      //  width: '100%',\r\n        position: 'relative',\r\n      //  position: 'absolute',\r\n        width: '-webkit-fill-available',\r\n    },\r\n    flexGrow: {\r\n        flexGrow: 1,\r\n    },\r\n    img: {\r\n        width: 75,\r\n    },\r\n    logoWrapper: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        bottom: '0',\r\n    },\r\n    footerDiv : {\r\n        background: '#f6f6f6',\r\n        padding: '15px',\r\n        textAlign: 'center',\r\n        color: '#fff',\r\n        fontSize: '11px',\r\n        fontFamily: 'Raleway, sans-serif',\r\n        paddingLeft: '0',\r\n        paddingRight: '0',\r\n        width: '100%',\r\n        float: 'left',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    footerText : {\r\n        color: 'black',\r\n    }\r\n}));\r\n\r\nconst Footer = props => {\r\n    const { className, ...rest } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div {...rest} className={clsx(classes.root, className)}>\r\n             <div className={classes.footerDiv}><p className={classes.footerText}>© All Rights Reserved.</p></div>\r\n            <div className={classes.logoWrapper}>\r\n                <img\r\n                    className={classes.img}\r\n                    alt=\"Logo\"\r\n                    src=\"/images/logos/icta-full-logo.png\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nFooter.propTypes = {\r\n    className: PropTypes.string,\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport Topbar from '../components/Topbar/Topbar';\r\nimport Footer from '../components/Footer/Footer';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        height: '100%',\r\n    },\r\n}));\r\n\r\nconst Minimal = props => {\r\n    const { children } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Topbar isMainLayout={false} />\r\n            <main>\r\n                {children}\r\n                <Footer />\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nMinimal.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n};\r\n\r\nexport default Minimal;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(4),\r\n    },\r\n    content: {\r\n        paddingTop: 150,\r\n        textAlign: 'center',\r\n    },\r\n    image: {\r\n        marginTop: 50,\r\n        display: 'inline-block',\r\n        maxWidth: '100%',\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nconst NotFound = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container justify=\"center\" spacing={4}>\r\n                <Grid item lg={6} xs={12}>\r\n                    <div className={classes.content}>\r\n                        <img\r\n                            alt=\"Under development\"\r\n                            className={classes.image}\r\n                            src=\"/images/not-found-image.png\"\r\n                        />\r\n                        <Typography variant=\"h1\">\r\n                            The page you are looking for isn’t here\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle2\">\r\n                            You either tried some shady route or you came here\r\n                            by mistake. Whichever it is, try using the\r\n                            navigation\r\n                        </Typography>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { Typography, Button } from '@material-ui/core';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\n\r\nconst errorDisplay = {\r\n    height: '300px',\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n};\r\n\r\nconst refreshButtonStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n};\r\n\r\nconst ErrorDisplay = ({ error, refreshButton }) => {\r\n    return (\r\n        <div>\r\n            <div style={errorDisplay} className=\"error-display\">\r\n                <ErrorIcon color=\"error\"></ErrorIcon>\r\n                <Typography variant=\"h5\">{error}</Typography>\r\n            </div>\r\n            <div style={refreshButtonStyle}>\r\n                {refreshButton && (\r\n                    <Button\r\n                        onClick={() => window.location.reload()}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Refresh\r\n                    </Button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorDisplay;\r\n","import React from 'react';\r\nimport { LinearProgress, CircularProgress } from '@material-ui/core';\r\n\r\nconst spinnerStyle = {\r\n    height: '300px',\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n};\r\n\r\nconst Spinner = ({ type }) => {\r\n    return (\r\n        <div style={spinnerStyle} className=\"spinner-view\">\r\n            {type === 'linear' ? (\r\n                <LinearProgress></LinearProgress>\r\n            ) : (\r\n                <CircularProgress></CircularProgress>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { loginWithUserPassword } from 'actions/signin';\r\nimport ErrorDisplay from 'views/Common/ErrorDisplay';\r\nimport Spinner from 'views/Common/Spinner';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        padding: '20px',\r\n        background: '#FFFFFF 0% 0% no-repeat padding-box',\r\n        boxShadow: ' 0px 0px 12px #0000001F',\r\n        borderRadius: '17px',\r\n        opacity: 1,\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    otpClass: {\r\n        padding: '10px 50px',\r\n    },\r\n}));\r\n\r\n\r\nconst SignIn = ({\r\n    loading,\r\n    error,\r\n    loginSuccess,\r\n    loginWithUserPassword\r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const onUsernameFieldChange = event => {\r\n        let value = event.target.value;\r\n        setUsername(value);\r\n    };\r\n\r\n    const onPasswordFieldChange = event => {\r\n        let value = event.target.value;\r\n        setPassword(value);\r\n    };\r\n\r\n\r\n    const loginWithUserPass = () => {\r\n        loginWithUserPassword({\r\n            username: username,\r\n            password: password\r\n        });\r\n    };\r\n \r\n    return loginSuccess ? (\r\n        <Redirect to=\"/item-list\" />\r\n    ) : loading ? (\r\n        <Spinner></Spinner>\r\n    ) : error ? (\r\n        <ErrorDisplay error={error} refreshButton={true}></ErrorDisplay>\r\n    ) : (\r\n        <div className={classes.root}>\r\n            <Container\r\n                component=\"main\"\r\n                maxWidth=\"xs\"\r\n                className={classes.container}\r\n            >\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h4\">\r\n                        Sign in\r\n                    </Typography>\r\n                        <div className={classes.form} noValidate>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                autoFocus\r\n                                onChange={onUsernameFieldChange}\r\n                            />\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                name=\"password\"\r\n                                autoFocus\r\n                                onChange={onPasswordFieldChange}\r\n                            />\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                fullWidth\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                                onClick={() => loginWithUserPass()}\r\n                                disabled={\r\n                                    username.length < 1 || password.length < 1\r\n                                }\r\n                                type=\"submit\"\r\n                            >\r\n                                LOGIN\r\n                            </Button>\r\n                        </div>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps({ signin }) {\r\n    let {loading, error } = signin;\r\n    let loginSuccess = sessionStorage.getItem('loginSuccess');\r\n    return {\r\n        loading,\r\n        error,\r\n        loginSuccess,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { loginWithUserPassword })(SignIn);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport { IconButton, Typography } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst DialogTitle = withStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        paddingTop: theme.spacing(2),\r\n    },\r\n    mainFont: {\r\n        color: '#004F8B',\r\n        'font-weight': 1000,\r\n    },\r\n    closeButton: {\r\n        cursor: 'pointer',\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n    },\r\n}))(props => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography {...other}>\r\n            <div className={classes.root}>\r\n                <div>\r\n                    <Typography variant=\"h2\" className={classes.mainFont}>\r\n                        {children}\r\n                    </Typography>\r\n                </div>\r\n                {onClose ? (\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        className={classes.closeButton}\r\n                        onClick={onClose}\r\n                        onTouchEnd={onClose}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                ) : null}\r\n            </div>\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nexport default DialogTitle;","import {\r\n    FETCH_LOOKUP_ITEMS,\r\n    FETCH_LOOKUP_ITEMS_SUCCESS,\r\n    FETCH_LOOKUP_ITEMS_FAILED,\r\n    FETCH_LOOKUP_ITEMS_RESET,\r\n    CREATE_INVENTORY,\r\n    CREATE_INVENTORY_SUCCESS,\r\n    CREATE_INVENTORY_FAILED,\r\n    CREATE_INVENTORY_RESET,\r\n    FETCH_INVENTORY,\r\n    FETCH_INVENTORY_SUCCESS,\r\n    FETCH_INVENTORY_FAILED,\r\n    FETCH_INVENTORY_RESET,\r\n} from './types';\r\n\r\nexport const getLookupValues = payload => {\r\n    return { type: FETCH_LOOKUP_ITEMS, payload };\r\n};\r\n\r\nexport const getLookupValuesSuccess = payload => {\r\n    return { type: FETCH_LOOKUP_ITEMS_SUCCESS, payload };\r\n};\r\n\r\nexport const getLookupValuesFailed = payload => {\r\n    return { type: FETCH_LOOKUP_ITEMS_FAILED, payload };\r\n};\r\n\r\nexport const getLookupValuesReset = payload => {\r\n    return { type: FETCH_LOOKUP_ITEMS_RESET, payload };\r\n};\r\n\r\n\r\nexport const submitItemInventoryCreate = payload => {\r\n    return { type: CREATE_INVENTORY, payload };\r\n};\r\n\r\nexport const submitItemInventoryCreateSuccess = payload => {\r\n    return { type: CREATE_INVENTORY_SUCCESS, payload };\r\n};\r\n\r\nexport const submitItemInventoryCreateFailed = payload => {\r\n    return { type: CREATE_INVENTORY_FAILED, payload };\r\n};\r\n\r\nexport const submitItemInventoryCreateReset = payload => {\r\n    return { type: CREATE_INVENTORY_RESET, payload };\r\n};\r\n\r\n\r\nexport const getInventoryList = payload => {\r\n    return { type: FETCH_INVENTORY, payload };\r\n};\r\n\r\nexport const getInventoryListSuccess = payload => {\r\n    return { type: FETCH_INVENTORY_SUCCESS, payload };\r\n};\r\n\r\nexport const getInventoryListFailed = payload => {\r\n    return { type: FETCH_INVENTORY_FAILED, payload };\r\n};\r\n\r\nexport const getInventoryListReset = payload => {\r\n    return { type: FETCH_INVENTORY_RESET, payload };\r\n};","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"date-fns\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Draggable from \"react-draggable\";\r\nimport DialogTitle from \"./DialogTitle\";\r\nimport { FormControlLabel, InputAdornment, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport { submitItemInventoryCreate, submitItemInventoryCreateReset } from \"actions/ItemInventory\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(4),\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n  },\r\n  paper: {\r\n    borderRadius: \"20px\",\r\n  },\r\n  model: {\r\n    boxShadow: \"0px 0px 14px #0000000D\",\r\n    opacity: 1,\r\n    borderRadius: \"20px\",\r\n  },\r\n  inputrow: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    gap: \"15px\",\r\n    [theme.breakpoints.down(500)]: {\r\n      display: \"block\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n  },\r\n  datePicker: {\r\n    marginTop: \"0px\",\r\n    [theme.breakpoints.down(500)]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  inputLabel: {\r\n    letterSpacing: \"0px\",\r\n    color: \"#043B84\",\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n  },\r\n  inputFeild: {\r\n    width: \"100%\",\r\n    background: \"#F3F3F3 0% 0% no-repeat padding-box\",\r\n    borderRadius: \"2px\",\r\n    height: \"53px\",\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n  },\r\n  titleRow: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"end\",\r\n  },\r\n  deleteIcon: {\r\n    position: \"absolute\",\r\n    right: \"23px\",\r\n    top: \"43px\",\r\n    color: \"red\",\r\n  },\r\n  confirmationDialog: {\r\n    padding: \"20px\",\r\n  },\r\n  confirmationActions: {\r\n    paddingTop: \"20px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  deleteConfirmBtn: {\r\n    color: \"red\",\r\n  },\r\n  validateMsg: {\r\n    color: \"red\",\r\n    fontSize: 16,\r\n  },\r\n  createSession: {\r\n    marginBottom: \"20px\",\r\n  },\r\n}));\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#session-create-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(4),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(4),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nconst SubmitButton = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"#004F8B\",\r\n    width: \"100%\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#004F8B\",\r\n    },\r\n    height: \"50px\",\r\n  },\r\n}))(Button);\r\n\r\nconst AddInventory = ({\r\n  submitFormItemRemove,\r\n  confirmation,\r\n  seletedRowData,\r\n  error,\r\n  submitFormItemCreate,\r\n  item,\r\n  submitItemInventoryCreate,\r\n  submitItemInventoryCreateReset,\r\n  fetchExistingItemsInventory,\r\n  random,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (seletedRowData) {\r\n      setEditMode(true);\r\n      setOpen(true);\r\n      setLoading(false);\r\n    }\r\n  }, [seletedRowData]);\r\n\r\n  /** Handle model from the create session button Start */\r\n  const handleClickOpen = () => {\r\n    setLoading(false);\r\n    setEditMode(false);\r\n    setOpen(true);\r\n    //updateItemList();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    handleSessionFormReset();\r\n    handleResetSessionObj();\r\n    setOpen(false);\r\n  };\r\n\r\n  /** Handle model from the create session button End */\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [editMode, setEditMode] = React.useState(false);\r\n\r\n  const [itemName, setItemName] = React.useState(\"\");\r\n  const [quantity, setQuantity] = React.useState(\"\");\r\n  const [unitType, setUnitType] = React.useState([]);\r\n  const [shedStoreNo, setShedStoreNo] = React.useState(\"\");\r\n  const [description, setDescription] = React.useState(\"\");\r\n  const [supervisorName, setSupervisorName] = React.useState(\"\");\r\n  const [handoverTo, setHandoverTo] = React.useState(\"\");\r\n  const [itemInventoryType, setItemInventoryType] = React.useState(\"GOODS_OUT\");\r\n  \r\n  const validForm =\r\n    itemName !== \"\" && quantity !== \"\" && unitType !== \"\" && itemInventoryType !== \"\";\r\n\r\n  useEffect(() => {\r\n    if (item != null) {\r\n      setItemName(item.name);\r\n      setUnitType(item?.unitsEntity?.name);\r\n    }\r\n  }, [item,random]);\r\n\r\n  /** Change state when change inputs */\r\n\r\n  const handleSelectInventoryType = (event) => {\r\n    setItemInventoryType(event.target.value);\r\n  }\r\n\r\n  const handleQuantityChange = (event) => {\r\n    let tmpSessionVaccines = Math.abs(event.target.value);\r\n    setQuantity(tmpSessionVaccines);\r\n  };\r\n\r\n  const handleShedStoreNoChange = (event) => {\r\n    setShedStoreNo(event.target.value);\r\n  };\r\n\r\n  const handleDescriptionChange = (event) => {\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  const handleSupervisorNameChange = (event) => {\r\n    setSupervisorName(event.target.value);\r\n  };\r\n\r\n  const handleHandoverToChange = (event) => {\r\n    setHandoverTo(event.target.value);\r\n  };\r\n\r\n  /** Change state when change input End */\r\n\r\n  /** Submit form for create a session */\r\n  const handleInventoryCreateSubmission = () => {\r\n    setLoading(true);\r\n    submitItemInventoryCreate({\r\n      id: null,\r\n      quantity: parseFloat(quantity),\r\n      shedStoreNo: shedStoreNo,\r\n      description: description,\r\n      supervisorName: supervisorName,\r\n      handoverTo: handoverTo,\r\n      inventoryType : itemInventoryType,\r\n      goodsId: item?.id,\r\n    });\r\n  };\r\n  /** Submit form for create a session End*/\r\n\r\n  /** Reset Form function */\r\n  const handleSessionFormReset = (event) => {\r\n    handleResetSessionObj();\r\n    submitItemInventoryCreateReset({});\r\n    setOpen(false);\r\n    fetchExistingItemsInventory();\r\n  };\r\n\r\n  const handleResetSessionObj = () => {\r\n    setItemName(\"\");\r\n    setQuantity(\"\");\r\n    setShedStoreNo(\"\");\r\n    setDescription(\"\");\r\n    setSupervisorName(\"\");\r\n    setHandoverTo(\"\");\r\n  };\r\n  /** Reset Form function */\r\n\r\n  const sessionCreated =\r\n    confirmation.payload?.statusMessage === \"Create Success.\";\r\n  const sessionUpdated =\r\n    confirmation.payload?.statusMessage === \"Update Successful\";\r\n  const notEdit = !(sessionCreated || sessionUpdated);\r\n  const sessionDeleted = notEdit\r\n    ? confirmation.payload?.statusMessage === \"Delete Successful\"\r\n    : false;\r\n\r\n  const confirmed = sessionCreated || sessionUpdated || sessionDeleted || error;\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        className={classes.createSession}\r\n        onClick={handleClickOpen}\r\n        variant=\"text\"\r\n        color=\"primary\"\r\n        endIcon={<AddIcon />}\r\n      >\r\n        <Typography\r\n          component=\"h3\"\r\n          variant=\"h6\"\r\n          align=\"left\"\r\n          className={classes.mainFont}\r\n        >\r\n          Add Inventory\r\n        </Typography>\r\n      </Button>\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n        disableBackdropClick\r\n        className={classes.model}\r\n        PaperProps={{\r\n          style: {\r\n            borderRadius: \"20px\",\r\n          },\r\n        }}\r\n        PaperComponent={PaperComponent}\r\n      >\r\n        <div className={classes.titleRow}>\r\n          <DialogTitle\r\n            style={{ cursor: \"move\" }}\r\n            id=\"session-create-dialog-title\"\r\n            onClose={handleClose}\r\n          >\r\n            {\" \"}\r\n            {!editMode ? \"Create Inventory\" : \"Update Inventory\"}\r\n          </DialogTitle>\r\n        </div>\r\n\r\n        <DialogContent dividers>\r\n          {error ? (\r\n            <Alert severity=\"error\">{error}</Alert>\r\n          ) : sessionUpdated && editMode ? (\r\n            <Alert severity=\"success\">Item updated.</Alert>\r\n          ) : sessionCreated ? (\r\n            <Alert severity=\"success\">New Inventory created.</Alert>\r\n          ) : sessionDeleted ? (\r\n            <Alert severity=\"success\">Item removed.</Alert>\r\n          ) : null}\r\n\r\n          {!confirmed ? (\r\n            <div>\r\n              <div className={classes.inputLabel}>Item Name</div>\r\n              <TextField\r\n                className={classes.inputFeild}\r\n                required\r\n                type=\"text\"\r\n                id=\"itemName\"\r\n                variant=\"outlined\"\r\n                disabled\r\n                //onChange={handleItemNameChange}\r\n                value={itemName || \"\"}\r\n              />\r\n              <br />\r\n              <br />\r\n\r\n              <div className={classes.inputLabel}>Quantity</div>\r\n              <TextField\r\n                className={classes.inputFeild}\r\n                required\r\n                type=\"number\"\r\n                id=\"quantity\"\r\n                variant=\"outlined\"\r\n                onChange={handleQuantityChange}\r\n                value={quantity || \"\"}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">{unitType}</InputAdornment>\r\n                  ),\r\n                  inputProps: { min: 0, max: 100000 },\r\n                }}\r\n              />\r\n\r\n              <br />\r\n              <br />\r\n              <div className={classes.inputLabel}>Inventory Type</div>\r\n              <RadioGroup\r\n                aria-label=\"inventoryType\"\r\n                name=\"radio-buttons-group\"\r\n                row\r\n                value={itemInventoryType}\r\n                onChange={handleSelectInventoryType}\r\n\r\n              >\r\n                <FormControlLabel value=\"GOODS_IN\" control={<Radio />} label=\"Goods In\" />\r\n                <FormControlLabel value=\"GOODS_OUT\" control={<Radio />} label=\"Goods Out\" />\r\n              </RadioGroup>\r\n              <br/>\r\n              <div className={classes.inputLabel}>Shed Store No</div>\r\n              <TextField\r\n                className={classes.inputFeild}\r\n                required\r\n                type=\"text\"\r\n                id=\"shedStoreNo\"\r\n                variant=\"outlined\"\r\n                onChange={handleShedStoreNoChange}\r\n                value={shedStoreNo || \"\"}\r\n              />\r\n\r\n              <br />\r\n              <br />\r\n\r\n              <div className={classes.inputLabel}>Description</div>\r\n              <TextField\r\n                className={classes.inputFeild}\r\n                required\r\n                type=\"text\"\r\n                id=\"description\"\r\n                variant=\"outlined\"\r\n                onChange={handleDescriptionChange}\r\n                value={description || \"\"}\r\n              />\r\n\r\n              <br />\r\n              <br />\r\n\r\n              <div className={classes.inputLabel}>Supervisor Name</div>\r\n              <TextField\r\n                className={classes.inputFeild}\r\n                required\r\n                type=\"text\"\r\n                id=\"supervisorName\"\r\n                variant=\"outlined\"\r\n                onChange={handleSupervisorNameChange}\r\n                value={supervisorName || \"\"}\r\n              />\r\n\r\n              <br />\r\n              <br />\r\n\r\n              <div className={classes.inputLabel}>Handover To</div>\r\n              <TextField\r\n                className={classes.inputFeild}\r\n                required\r\n                type=\"text\"\r\n                id=\"handoverTo\"\r\n                variant=\"outlined\"\r\n                onChange={handleHandoverToChange}\r\n                value={handoverTo || \"\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {confirmed ? (\r\n            <SubmitButton\r\n              className={classes.buttonStyle}\r\n              autoFocus\r\n              onClick={handleSessionFormReset}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n            >\r\n              Ok\r\n            </SubmitButton>\r\n          ) : null}\r\n\r\n          {!confirmed ? (\r\n            !editMode ? (\r\n              <SubmitButton\r\n                className={classes.buttonStyle}\r\n                autoFocus\r\n                onClick={handleInventoryCreateSubmission}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disabled={loading || !validForm}\r\n              >\r\n                {loading ? \"Creating...\" : \"Create\"}\r\n              </SubmitButton>\r\n            ) : (\r\n             null\r\n            )\r\n          ) : null}\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps({ itemInventory }) {\r\n  let { error, confirmation } = itemInventory;\r\n\r\n  return {\r\n    error,\r\n    confirmation,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  submitItemInventoryCreate,\r\n  submitItemInventoryCreateReset,\r\n})(AddInventory);\r\n","import {\r\n    FETCH_DISTRICT,\r\n    FETCH_DISTRICT_SUCCESS,\r\n    FETCH_DISTRICT_FAILED,\r\n    FETCH_SESSIONS,\r\n    FETCH_SESSIONS_SUCCESS,\r\n    FETCH_SESSIONS_FAILED,\r\n    NOTIFY_ALL,\r\n    NOTIFY_ALL_SUCCESS,\r\n    NOTIFY_ALL_FAILED,\r\n    CANCEL_SESSION,\r\n    CANCEL_SESSION_SUCCESS,\r\n    CANCEL_SESSION_FAILED,\r\n    FETCH_CANCELLED_SESSIONS,\r\n    FETCH_CANCELLED_SESSIONS_SUCCESS,\r\n    FETCH_CANCELLED_SESSIONS_FAILED,\r\n    CANCEL_SESSION_RESET,\r\n\r\n    FETCH_UNIT_TYPE,\r\n    FETCH_UNIT_TYPE_SUCCESS,\r\n    FETCH_UNIT_TYPE_FAILED,\r\n    SUBMIT_FORM_ITEM,\r\n    SUBMIT_FORM_ITEM_SUCCESS,\r\n    SUBMIT_FORM_ITEM_FAILED,\r\n    UPDATE_FORM_ITEM,\r\n    UPDATE_FORM_ITEM_SUCCESS,\r\n    UPDATE_FORM_ITEM_FAILED,\r\n    RESET_FORM_ITEM,\r\n    RESET_FORM_ITEM_SUCCESS,\r\n    FETCH_ITEMS,\r\n    FETCH_ITEMS_SUCCESS,\r\n    FETCH_ITEMS_FAILED,\r\n    FETCH_ITEMS_RESET,\r\n    DELETE_FORM_ITEM,\r\n    DELETE_FORM_ITEM_SUCCESS,\r\n    DELETE_FORM_ITEM_FAILED,\r\n    FETCH_CATEGORY,\r\n    FETCH_CATEGORY_SUCCESS,\r\n    FETCH_CATEGORY_FAILED,\r\n    FETCH_CATEGORY_RESET,\r\n} from './types';\r\n\r\nexport const fetchDistricts = payload => {\r\n    return { type: FETCH_DISTRICT, payload };\r\n};\r\n\r\nexport const fetchDistrictSuccess = payload => {\r\n    return { type: FETCH_DISTRICT_SUCCESS, payload };\r\n};\r\n\r\nexport const fetchDistrictFailed = payload => {\r\n    return { type: FETCH_DISTRICT_FAILED, payload };\r\n};\r\n\r\nexport const fetchSessions = payload => {\r\n    return { type: FETCH_SESSIONS, payload };\r\n};\r\n\r\nexport const notifyAll = payload => {\r\n    return { type: NOTIFY_ALL, payload };\r\n};\r\n\r\nexport const notifyAllSuccess = payload => {\r\n    return { type: NOTIFY_ALL_SUCCESS, payload };\r\n};\r\n\r\nexport const notifyAllFailed = payload => {\r\n    return { type: NOTIFY_ALL_FAILED, payload };\r\n};\r\n\r\nexport const fetchSessionsSuccess = payload => {\r\n    return { type: FETCH_SESSIONS_SUCCESS, payload };\r\n};\r\n\r\nexport const fetchSessionsFailed = payload => {\r\n    return { type: FETCH_SESSIONS_FAILED, payload };\r\n};\r\n\r\n\r\n\r\n\r\n/** Cancel a Sessions */\r\nexport const cancelSession = payload => {\r\n    return { type: CANCEL_SESSION, payload };\r\n};\r\n\r\nexport const cancelSessionSuccess = payload => {\r\n    return { type: CANCEL_SESSION_SUCCESS, payload };\r\n};\r\n\r\nexport const cancelSessionFailed = payload => {\r\n    return { type: CANCEL_SESSION_FAILED, payload };\r\n};\r\n\r\nexport const cancelSessionReset = payload => {\r\n    return { type: CANCEL_SESSION_RESET, payload };\r\n};\r\n\r\n/** Cancelled Sessions List */\r\nexport const fetchCancelledSessions = payload => {\r\n    return { type: FETCH_CANCELLED_SESSIONS, payload };\r\n};\r\n\r\nexport const fetchCancelledSessionsSuccess = payload => {\r\n    return { type: FETCH_CANCELLED_SESSIONS_SUCCESS, payload };\r\n};\r\n\r\nexport const fetchCancelledSessionsFailed = payload => {\r\n    return { type: FETCH_CANCELLED_SESSIONS_FAILED, payload };\r\n};\r\n\r\n\r\n/***--------------------------- */\r\n\r\n\r\n/** Fetch vaccine typs */\r\nexport const fetchUnitTyps = payload => {\r\n    return { type: FETCH_UNIT_TYPE, payload };\r\n};\r\n\r\nexport const fetchUnitTypesSuccess = payload => {\r\n    return { type: FETCH_UNIT_TYPE_SUCCESS, payload };\r\n};\r\n\r\nexport const fetchUnitTypsFailed = payload => {\r\n    return { type: FETCH_UNIT_TYPE_FAILED, payload };\r\n};\r\n\r\n// Create\r\nexport const submitFormItemCreate = payload => {\r\n    return { type: SUBMIT_FORM_ITEM, payload };\r\n};\r\n\r\nexport const submitFormItemCreateSuccess = payload => {\r\n    return { type: SUBMIT_FORM_ITEM_SUCCESS, payload };\r\n};\r\n\r\nexport const submitFormItemCreateFailed = payload => {\r\n    return { type: SUBMIT_FORM_ITEM_FAILED, payload };\r\n};\r\n\r\n\r\n// Update\r\nexport const submitFormItemUpdate = payload => {\r\n    return { type: UPDATE_FORM_ITEM, payload };\r\n};\r\n\r\nexport const submitFormItemUpdateSuccess = payload => {\r\n    return { type: UPDATE_FORM_ITEM_SUCCESS, payload };\r\n};\r\n\r\nexport const submitFormItemUpdateFailed = payload => {\r\n    return { type: UPDATE_FORM_ITEM_FAILED, payload };\r\n};\r\n\r\n// Reset\r\n\r\nexport const restFormItemSuccess = payload => {\r\n    return { type: RESET_FORM_ITEM_SUCCESS, payload };\r\n};\r\n\r\nexport const resetItemCreateForm = payload => {\r\n    return { type: RESET_FORM_ITEM, payload };\r\n};\r\n\r\n//fetch items\r\nexport const fetchItems = payload => {\r\n    return { type: FETCH_ITEMS, payload };\r\n};\r\n\r\nexport const fetchItemsSuccess = payload => {\r\n    return { type: FETCH_ITEMS_SUCCESS, payload };\r\n};\r\n\r\nexport const fetchItemsFailed = payload => {\r\n    return { type: FETCH_ITEMS_FAILED, payload };\r\n};\r\n\r\nexport const fetchItemsReset = payload => {\r\n    return { type: FETCH_ITEMS_RESET, payload };\r\n};\r\n\r\n\r\n// Delete\r\nexport const submitFormItemRemove = payload => {\r\n    return { type: DELETE_FORM_ITEM, payload };\r\n};\r\n\r\nexport const submitFormItemRemoveSuccess = payload => {\r\n    return { type: DELETE_FORM_ITEM_SUCCESS, payload };\r\n};\r\n\r\nexport const submitFormItemRemoveFailed = payload => {\r\n    return { type: DELETE_FORM_ITEM_FAILED, payload };\r\n};\r\n\r\n//fetch item category\r\n\r\n// Delete\r\nexport const fetchItemCategory = payload => {\r\n    return { type: FETCH_CATEGORY, payload };\r\n};\r\n\r\nexport const fetchItemCategorySuccess = payload => {\r\n    return { type: FETCH_CATEGORY_SUCCESS, payload };\r\n};\r\n\r\nexport const fetchItemCategoryFailed = payload => {\r\n    return { type: FETCH_CATEGORY_FAILED, payload };\r\n};\r\n\r\nexport const fetchItemCategoryRest = payload => {\r\n    return { type: FETCH_CATEGORY_RESET, payload };\r\n};","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ErrorDisplay from \"views/Common/ErrorDisplay\";\r\nimport Spinner from \"views/Common/Spinner\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport AddInventory from \"./AddInventory\";\r\nimport { getInventoryList, getLookupValues, getInventoryListReset } from \"actions/ItemInventory\";\r\nimport { fetchItemCategory, fetchUnitTyps, } from \"actions/goods\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n//import CircularProgress from '@mui/material/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .table--cell\": {\r\n      fontSize: \"13px\",\r\n    },\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: \"85%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n    borderRadius: \"20px\",\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  mainFont: {\r\n    color: \"#004F8B\",\r\n    \"font-weight\": 1000,\r\n  },\r\n  textBox: {\r\n    padding: \"10px\",\r\n  },\r\n  subtitle: {\r\n    color: \"#848484\",\r\n  },\r\n  tableHeader: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  tableHeaderTitle: {\r\n    display: \"flex\",\r\n    gap: \"20px\",\r\n  },\r\n  tableCell: {\r\n    minWidth: \"fit-content\",\r\n  },\r\n  confirmationDialog: {\r\n    padding: \"20px\",\r\n  },\r\n  confirmationActions: {\r\n    paddingTop: \"20px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  deleteConfirmBtn: {\r\n    color: \"red\",\r\n  },\r\n  cancellationMsg: {\r\n    width: \"100%\",\r\n    cursor: \"auto\",\r\n    padding: \"5px\",\r\n  },\r\n  filterRow: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  inputFeild: {\r\n    width: \"50%\",\r\n  },\r\n  searchWrapper: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  alertWrapper: {\r\n    fontSize: '20px',\r\n    alignItems: 'center',\r\n    height: '70px',\r\n    lineHeight: '30px',\r\n\r\n  }\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#e6e6e6\",\r\n    color: theme.palette.common.black,\r\n  },\r\n  body: {\r\n    fontSize: 15,\r\n  },\r\n}))(TableCell);\r\n\r\nconst ItemInventoryList = ({\r\n  loading,\r\n  error,\r\n  loginSuccess,\r\n  itemsInventoryList,\r\n  getLookupValues,\r\n  itemList,\r\n  getInventoryList,\r\n  getInventoryListReset,\r\n  categoryList,\r\n  fetchItemCategory,\r\n  fetchUnitTyps,\r\n  unitList,\r\n  totalCount,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [searchItemName, setSearchItemName] = React.useState(\"\");\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [select, setSelection] = React.useState(null);\r\n  const [item, setItem] = React.useState(null);\r\n  const [itemCategory, setItemCategory] = React.useState(null);\r\n  const [inventoryType, setInventoryType] = React.useState(null);\r\n\r\n  const handleSearchFieldChange = (event, value) => {\r\n    setSearchItemName(value || \"\");\r\n    if (value !== null) {\r\n      setItem(value);\r\n    } else {\r\n      getInventoryListReset();\r\n    }\r\n  };\r\n\r\n  const handleSelectItemCategory = (event, value) => {\r\n    setItemCategory(value || \"\");\r\n    if (value !== null) {\r\n      getLookupValues(value?.id);\r\n    } else {\r\n      setSearchItemName('');\r\n      getInventoryListReset();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUnitTyps();\r\n    fetchItemCategory();\r\n  }, [fetchUnitTyps, fetchItemCategory]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    if (itemCategory !== null && searchItemName !== \"\" && inventoryType !== null) {\r\n      getInventoryList({\r\n        item: item?.id,\r\n        inventoryType: inventoryType,\r\n        pageSize: rowsPerPage,\r\n        pageNo: newPage,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    if (itemCategory !== null && searchItemName !== \"\" && inventoryType !== null) {\r\n      getInventoryList({\r\n        item: item?.id,\r\n        inventoryType: inventoryType,\r\n        pageSize: parseInt(event.target.value, 10),\r\n        pageNo: page,\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateItemList = () => {\r\n    setSelection(null);\r\n    setItem();\r\n  };\r\n\r\n  const fetchExistingItemsInventory = () => {\r\n    // getInventoryList({\r\n    //   item: item?.id,\r\n    //   inventoryType: \"ALL\",\r\n    //   pageSize: 10,\r\n    //   pageNo: 0,\r\n    // });\r\n    getLookupValues(itemCategory?.id);\r\n  };\r\n\r\n  const handleChangeInventoryType = (event) => {\r\n    setInventoryType(event.target.value);\r\n    getInventoryList({\r\n      item: item?.id,\r\n      inventoryType: event.target.value,\r\n      pageSize: 10,\r\n      pageNo: 0,\r\n    });\r\n  }\r\n\r\n  const getUnitName = (inventoryItem) => {\r\n    return unitList.filter(res => res.id === inventoryItem?.unit)[0]?.name\r\n  }\r\n\r\n  return !loginSuccess ? (\r\n    <Redirect to=\"/sign-in\" />\r\n  ) : loading ? (\r\n    <Spinner></Spinner>\r\n  ) : error ? (\r\n    <ErrorDisplay error={error} refreshButton={true}></ErrorDisplay>\r\n  ) : (\r\n    <div className={classes.root}>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.tableHeader}>\r\n            <div className={classes.tableHeaderTitle}>\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h2\"\r\n                align=\"left\"\r\n                className={classes.mainFont}\r\n              >\r\n                Item Inventory\r\n              </Typography>\r\n            </div>\r\n            {searchItemName ? (\r\n              <AddInventory\r\n                seletedRowData={select}\r\n                setSelection={setSelection}\r\n                updateItemList={updateItemList}\r\n                item={item}\r\n                random={Math.random()}\r\n                fetchExistingItemsInventory={fetchExistingItemsInventory}\r\n              />\r\n            ) : null}\r\n          </div>\r\n          <br />\r\n          <br />\r\n          <div\r\n            style={{ height: \"100%\", width: \"100%\" }}\r\n            className={classes.root}\r\n          >\r\n            <div className={classes.searchWrapper}>\r\n              <div>Category</div>\r\n              <Autocomplete\r\n                className={classes.inputFeild}\r\n                id=\"itemCategory\"\r\n                value={itemCategory}\r\n                options={categoryList}\r\n                getOptionLabel={(option) => option?.name || \"\"}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} variant=\"outlined\" />\r\n                )}\r\n                onChange={(event, newValue) => {\r\n                  handleSelectItemCategory(event, newValue);\r\n                }}\r\n              />\r\n            </div>\r\n            <br />\r\n            <div className={classes.searchWrapper}>\r\n              <div>Item</div>\r\n              <Autocomplete\r\n                className={classes.inputFeild}\r\n                id=\"unitType\"\r\n                value={searchItemName}\r\n                options={itemList}\r\n                getOptionLabel={(option) => option?.name || \"\"}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} variant=\"outlined\" />\r\n                )}\r\n                onChange={(event, newValue) => {\r\n                  handleSearchFieldChange(event, newValue);\r\n                }}\r\n              />\r\n            </div>\r\n            <br />\r\n            <div className={classes.searchWrapper}>\r\n              <div></div>\r\n              <RadioGroup\r\n                aria-label=\"inventoryType\"\r\n                name=\"radio-buttons-group\"\r\n                row\r\n                value={inventoryType}\r\n                onChange={handleChangeInventoryType}\r\n\r\n              >\r\n                <FormControlLabel value=\"ALL\" control={<Radio />} label=\"Goods In/Out\" disabled={searchItemName === \"\"} />\r\n                <FormControlLabel value=\"IN\" control={<Radio />} label=\"Goods In\" disabled={searchItemName === \"\"} />\r\n                <FormControlLabel value=\"OUT\" control={<Radio />} label=\"Goods Out\" disabled={searchItemName === \"\"} />\r\n              </RadioGroup>\r\n            </div>\r\n            <br />\r\n            {searchItemName !== \"\" ? (\r\n              <div>\r\n                <Alert severity=\"info\" className={classes.alertWrapper}>\r\n                  {itemsInventoryList.length > 0 ? <div>Remaining Quantity: {itemsInventoryList[0]?.totalQuantity} {unitList.filter(res => res.id === itemsInventoryList[0]?.unit)[0]?.name}</div> : <div>No Data</div>}\r\n                </Alert>\r\n                <br />\r\n                <br />\r\n              </div>\r\n            ) : null}\r\n\r\n            {totalCount === 0 ? (\r\n              <Typography component=\"h6\" variant=\"h6\" align=\"center\">\r\n                No Data\r\n              </Typography>\r\n            ) : (\r\n              <React.Fragment>\r\n                <TableContainer component={Paper}>\r\n                  <Table\r\n                    className={classes.table}\r\n                    aria-label=\"customized table\"\r\n                  >\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <StyledTableCell width={\"20%\"}>DATE</StyledTableCell>\r\n                        <StyledTableCell width={\"10%\"}>\r\n                          QUANTITY ({getUnitName(itemsInventoryList[0])})\r\n                        </StyledTableCell>\r\n                        <StyledTableCell width={\"10%\"}>\r\n                          GOODS IN/OUT\r\n                        </StyledTableCell>\r\n                        <StyledTableCell width={\"20%\"}>\r\n                          SHED STORE NO\r\n                        </StyledTableCell>\r\n                        <StyledTableCell width={\"20%\"}>\r\n                          DESCRIPTION\r\n                        </StyledTableCell>\r\n                        <StyledTableCell width={\"10%\"}>\r\n                          SUPERVISOR NAME\r\n                        </StyledTableCell>\r\n                        <StyledTableCell width={\"10%\"}>\r\n                          HANDOVER TO\r\n                        </StyledTableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {itemsInventoryList.map((item, index) => (\r\n                        <StyledTableRow key={item.id}>\r\n                          <StyledTableCell>{item?.date}</StyledTableCell>\r\n                          <StyledTableCell>{item?.quantity}</StyledTableCell>\r\n                          <StyledTableCell>{item?.inventoryType.split(\"_\")[1]}</StyledTableCell>\r\n                          <StyledTableCell>\r\n                            {item?.shedStoreNo}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell>\r\n                            {item?.description}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell>\r\n                            {item?.supervisorName}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell>\r\n                            {item?.handoverTo}\r\n                          </StyledTableCell>\r\n                        </StyledTableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[5, 10, 50]}\r\n                  component=\"div\"\r\n                  count={totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n        </Paper>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps({ itemInventory, goods }) {\r\n  let loginSuccess = sessionStorage.getItem(\"loginSuccess\");\r\n  let { itemCategoryList, unitTypes } = goods;\r\n  return {\r\n    loginSuccess,\r\n    loading: itemInventory.loading,\r\n    itemList: itemInventory?.nameLookups?.data,\r\n    error: null,\r\n    itemsInventoryList: itemInventory?.inventory?.content,\r\n    categoryList: itemCategoryList?.data,\r\n    unitList: unitTypes?.data,\r\n    totalCount : itemInventory?.inventory?.totalCount\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  getLookupValues,\r\n  getInventoryList,\r\n  getInventoryListReset,\r\n  fetchItemCategory,\r\n  fetchUnitTyps,\r\n})(ItemInventoryList);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport { IconButton, Typography } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst DialogTitle = withStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        paddingTop: theme.spacing(2),\r\n    },\r\n    mainFont: {\r\n        color: '#004F8B',\r\n        'font-weight': 1000,\r\n    },\r\n    closeButton: {\r\n        cursor: 'pointer',\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n    },\r\n}))(props => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography {...other}>\r\n            <div className={classes.root}>\r\n                <div>\r\n                    <Typography variant=\"h2\" className={classes.mainFont}>\r\n                        {children}\r\n                    </Typography>\r\n                </div>\r\n                {onClose ? (\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        className={classes.closeButton}\r\n                        onClick={onClose}\r\n                        onTouchEnd={onClose}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                ) : null}\r\n            </div>\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nexport default DialogTitle;","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport \"date-fns\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport {\r\n  resetItemCreateForm,\r\n  fetchCancelledSessions,\r\n  submitFormItemCreate,\r\n  submitFormItemUpdate,\r\n  submitFormItemRemove,\r\n} from \"actions/goods\";\r\nimport moment from \"moment\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Draggable from \"react-draggable\";\r\nimport DialogTitle from \"./DialogTitle\";\r\nimport { InputAdornment } from \"@material-ui/core\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(4),\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n  },\r\n  paper: {\r\n    borderRadius: \"20px\",\r\n  },\r\n  model: {\r\n    boxShadow: \"0px 0px 14px #0000000D\",\r\n    opacity: 1,\r\n    borderRadius: \"20px\",\r\n  },\r\n  inputrow: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    gap: \"15px\",\r\n    [theme.breakpoints.down(500)]: {\r\n      display: \"block\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n  },\r\n  datePicker: {\r\n    marginTop: \"0px\",\r\n    [theme.breakpoints.down(500)]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  inputLabel: {\r\n    letterSpacing: \"0px\",\r\n    color: \"#043B84\",\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n  },\r\n  inputFeild: {\r\n    width: \"100%\",\r\n    background: \"#F3F3F3 0% 0% no-repeat padding-box\",\r\n    borderRadius: \"2px\",\r\n    height: \"53px\",\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n  },\r\n  titleRow: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"end\",\r\n  },\r\n  deleteIcon: {\r\n    position: \"absolute\",\r\n    right: \"23px\",\r\n    top: \"43px\",\r\n    color: \"red\",\r\n  },\r\n  confirmationDialog: {\r\n    padding: \"20px\",\r\n  },\r\n  confirmationActions: {\r\n    paddingTop: \"20px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  deleteConfirmBtn: {\r\n    color: \"red\",\r\n  },\r\n  validateMsg: {\r\n    color: \"red\",\r\n    fontSize: 16,\r\n  },\r\n  createSession: {\r\n    marginBottom: \"20px\",\r\n  },\r\n}));\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#session-create-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(4),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(4),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nconst SubmitButton = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"#004F8B\",\r\n    width: \"100%\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#004F8B\",\r\n    },\r\n    height: \"50px\",\r\n  },\r\n}))(Button);\r\n\r\nconst ItemAdd = ({\r\n  submitFormItemRemove,\r\n  confirmation,\r\n  seletedRowData,\r\n  resetItemCreateForm,\r\n  error,\r\n  unitTypeList,\r\n  submitFormItemCreate,\r\n  submitFormItemUpdate,\r\n  updateItemList,\r\n  categoryList,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [selectedDataRow, setSelectedDataRow] = React.useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (seletedRowData) {\r\n      setSelectedDataToForm(seletedRowData.select);\r\n      setEditMode(true);\r\n      setOpen(true);\r\n      setLoading(false);\r\n      setSelectedDataRow(seletedRowData.select);\r\n    }\r\n  }, [seletedRowData]);\r\n\r\n  /** Handle model from the create session button Start */\r\n  const handleClickOpen = () => {\r\n    setLoading(false);\r\n    setEditMode(false);\r\n    setOpen(true);\r\n    //updateItemList();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    handleSessionFormReset();\r\n    handleResetSessionObj();\r\n    setOpen(false);\r\n  };\r\n\r\n  /** Handle model from the create session button End */\r\n\r\n  const todayDate = new Date();\r\n  const tomorrowDate = new Date(todayDate);\r\n  tomorrowDate.setDate(tomorrowDate.getDate() + 1);\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openAlert, setOpenAlert] = React.useState(false);\r\n  const [editMode, setEditMode] = React.useState(false);\r\n\r\n  const [itemName, setItemName] = React.useState(\"\");\r\n  const [minQuantity, setMinQuantity] = React.useState(\"\");\r\n  const [unitType, setUnitType] = React.useState([]);\r\n  const [itemCategory, setItemCategory] = React.useState(\"\");\r\n  const [notes, setNotes] = React.useState(\"\");\r\n  const [date, setDate] = React.useState(\r\n    moment(todayDate).format(moment.HTML5_FMT.DATE)\r\n  );\r\n\r\n  const validForm =\r\n    itemName !== \"\" && minQuantity !== \"\" && unitType !== \"\" && notes !== \"\";\r\n\r\n  /** Change state when change inputs */\r\n\r\n  const handleItemNameChange = (event) => {\r\n    let temp = event.target.value || \"\";\r\n    setItemName(temp);\r\n  };\r\n\r\n  const handleNotesChange = (event) => {\r\n    let temp = event.target.value || \"\";\r\n    setNotes(temp);\r\n  };\r\n\r\n  const handleMinQuantityChange = (event) => {\r\n    let tmpSessionVaccines = Math.abs(event.target.value);\r\n    setMinQuantity(tmpSessionVaccines);\r\n  };\r\n\r\n  const handleUnitTypeChange = (event, value) => {\r\n    setUnitType(value || \"\");\r\n  };\r\n\r\n  const handleItemCategoryChange = (event, value) => {\r\n    setItemCategory(value || \"\");\r\n  };\r\n\r\n  const handleSessionCreateSubmission = () => {\r\n    setLoading(true);\r\n    submitFormItemCreate({\r\n      id: null,\r\n      date: moment(date)\r\n        .format(moment.HTML5_FMT.DATE)\r\n        .toString(),\r\n      goodName: itemName,\r\n      description: notes,\r\n      minQuantity: parseFloat(minQuantity),\r\n      category: itemCategory?.id,\r\n      unitId: unitType?.id,\r\n      userId: 0,\r\n    });\r\n  };\r\n\r\n  const handleSessionUpdateSubmission = () => {\r\n    setLoading(true);\r\n    submitFormItemUpdate({\r\n      id: selectedDataRow.id,\r\n      date: moment(date)\r\n        .format(moment.HTML5_FMT.DATE)\r\n        .toString(),\r\n      goodName: itemName,\r\n      description: notes,\r\n      minQuantity: parseFloat(minQuantity),\r\n      category: itemCategory?.id,\r\n      unitId: unitType?.id,\r\n      userId: 0,\r\n    });\r\n  };\r\n\r\n  const setSelectedDataToForm = (selectedData) => {\r\n    const selectedUnitType = unitTypeList.filter(\r\n      (res) => res.id === selectedData?.units?.id\r\n    )[0];\r\n\r\n    const selectedItemCategory = categoryList.filter(\r\n      (res) => res.id === selectedData?.category?.id\r\n    )[0];\r\n\r\n    setItemName(selectedData?.name);\r\n    setMinQuantity(selectedData?.minQuantity);\r\n    setItemCategory(selectedItemCategory);\r\n    setUnitType(selectedUnitType);\r\n    setNotes(selectedData?.description);\r\n    setDate(selectedData?.date);\r\n  };\r\n\r\n  const handleSessionFormReset = (event) => {\r\n    resetItemCreateForm({});\r\n    handleResetSessionObj();\r\n    setOpen(false);\r\n    updateItemList();\r\n  };\r\n\r\n  const handleResetSessionObj = () => {\r\n    setItemName(\"\");\r\n    setMinQuantity(\"\");\r\n    setUnitType(\"\");\r\n    setNotes(\"\");\r\n    setItemCategory(\"\");\r\n    setDate(todayDate);\r\n  };\r\n\r\n  const handleOpenAlert = () => {\r\n    setOpenAlert(true);\r\n  };\r\n\r\n  const handleCloseAlert = () => {\r\n    setOpenAlert(false);\r\n  };\r\n  \r\n  const handleRemoveSession = () => {\r\n    setOpenAlert(false);\r\n    setLoading(true);\r\n    submitFormItemRemove({\r\n      id: selectedDataRow.id,\r\n    });\r\n  };\r\n\r\n  const sessionCreated =\r\n    confirmation.payload?.statusMessage === \"Saved Successful\";\r\n  const sessionUpdated =\r\n    confirmation.payload?.statusMessage === \"Update Successful\";\r\n  const notEdit = !(sessionCreated || sessionUpdated);\r\n  const sessionDeleted = notEdit\r\n    ? confirmation.payload?.statusMessage === \"Delete Successful\"\r\n    : false;\r\n\r\n  const confirmed = sessionCreated || sessionUpdated || sessionDeleted || error;\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={openAlert}\r\n        onClose={handleCloseAlert}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <div className={classes.confirmationDialog}>\r\n          Are you sure you want to delete this item ?\r\n          <div className={classes.confirmationActions}>\r\n            <Button\r\n              onClick={handleRemoveSession}\r\n              className={classes.deleteConfirmBtn}\r\n            >\r\n              Yes\r\n            </Button>\r\n            <Button onClick={handleCloseAlert}> No </Button>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n\r\n      <Button\r\n        className={classes.createSession}\r\n        onClick={handleClickOpen}\r\n        variant=\"text\"\r\n        color=\"primary\"\r\n        endIcon={<AddIcon />}\r\n      >\r\n        <Typography\r\n          component=\"h3\"\r\n          variant=\"h6\"\r\n          align=\"left\"\r\n          className={classes.mainFont}\r\n        >\r\n          Create Item\r\n        </Typography>\r\n      </Button>\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n        disableBackdropClick\r\n        className={classes.model}\r\n        PaperProps={{\r\n          style: {\r\n            borderRadius: \"20px\",\r\n          },\r\n        }}\r\n        PaperComponent={PaperComponent}\r\n      >\r\n        <div className={classes.titleRow}>\r\n          <DialogTitle\r\n            style={{ cursor: \"move\" }}\r\n            id=\"session-create-dialog-title\"\r\n            onClose={handleClose}\r\n          >\r\n            {\" \"}\r\n            {!editMode ? \"Create Item\" : \"Update Item\"}\r\n          </DialogTitle>\r\n          <div>\r\n            {editMode && !loading ? (\r\n              <Button\r\n                onClick={handleOpenAlert}\r\n                variant=\"text\"\r\n                color=\"primary\"\r\n                endIcon={<DeleteIcon />}\r\n                className={classes.deleteIcon}\r\n                disabled={loading}\r\n              >\r\n                Remove this Item\r\n              </Button>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n\r\n        <DialogContent dividers>\r\n          {error ? (\r\n            <Alert severity=\"error\">{error}</Alert>\r\n          ) : sessionUpdated && editMode ? (\r\n            <Alert severity=\"success\">Item updated.</Alert>\r\n          ) : sessionCreated ? (\r\n            <Alert severity=\"success\">New Item created.</Alert>\r\n          ) : sessionDeleted ? (\r\n            <Alert severity=\"success\">Item removed.</Alert>\r\n          ) : null}\r\n\r\n          {!confirmed ? (\r\n            <div>\r\n              <div className={classes.inputLabel}>Item Name</div>\r\n              <TextField\r\n                className={classes.inputFeild}\r\n                required\r\n                type=\"text\"\r\n                id=\"itemName\"\r\n                variant=\"outlined\"\r\n                onChange={handleItemNameChange}\r\n                value={itemName || \"\"}\r\n              />\r\n              <br />\r\n              <br />\r\n\r\n              <div className={classes.inputLabel}>Item Category</div>\r\n              <Autocomplete\r\n                className={classes.inputFeild}\r\n                id=\"category\"\r\n                value={itemCategory}\r\n                options={categoryList}\r\n                getOptionLabel={(option) => option?.name || \"\"}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} variant=\"outlined\" />\r\n                )}\r\n                onChange={(event, newValue) => {\r\n                  handleItemCategoryChange(event, newValue);\r\n                }}\r\n              />\r\n\r\n              <br />\r\n              <br />\r\n\r\n              <div className={classes.inputLabel}>Unit Type</div>\r\n              <Autocomplete\r\n                className={classes.inputFeild}\r\n                id=\"unitType\"\r\n                value={unitType}\r\n                options={unitTypeList}\r\n                getOptionLabel={(option) => option?.name || \"\"}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} variant=\"outlined\" />\r\n                )}\r\n                onChange={(event, newValue) => {\r\n                  handleUnitTypeChange(event, newValue);\r\n                }}\r\n              />\r\n\r\n              <br />\r\n              <br />\r\n\r\n              <div className={classes.inputLabel}>Minimum Quantity</div>\r\n              <TextField\r\n                className={classes.inputFeild}\r\n                required\r\n                type=\"number\"\r\n                id=\"minQuantity\"\r\n                variant=\"outlined\"\r\n                onChange={handleMinQuantityChange}\r\n                value={minQuantity || \"\"}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">{unitType?.name}</InputAdornment>\r\n                  ),\r\n                  inputProps: { min: 0, max: 100000 },\r\n                }}\r\n              />\r\n\r\n              <br/>\r\n              <br/>\r\n\r\n              {/**  Select Session Loacation Address  */}\r\n              <div className={classes.inputLabel}>Description</div>\r\n              <TextField\r\n                className={classes.inputFeild}\r\n                required\r\n                type=\"text\"\r\n                id=\"notes\"\r\n                variant=\"outlined\"\r\n                onChange={handleNotesChange}\r\n                value={notes || \"\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {confirmed ? (\r\n            <SubmitButton\r\n              className={classes.buttonStyle}\r\n              autoFocus\r\n              onClick={handleSessionFormReset}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n            >\r\n              Ok\r\n            </SubmitButton>\r\n          ) : null}\r\n\r\n          {!confirmed ? (\r\n            !editMode ? (\r\n              <SubmitButton\r\n                className={classes.buttonStyle}\r\n                autoFocus\r\n                onClick={handleSessionCreateSubmission}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disabled={loading || !validForm}\r\n              >\r\n                {loading ? \"Creating...\" : \"Create\"}\r\n              </SubmitButton>\r\n            ) : (\r\n              <SubmitButton\r\n                className={classes.buttonStyle}\r\n                autoFocus\r\n                onClick={handleSessionUpdateSubmission}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disabled={loading || !validForm}\r\n              >\r\n                {loading ? \"loading...\" : \"Update\"}\r\n              </SubmitButton>\r\n            )\r\n          ) : null}\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps({ goods }) {\r\n  let { error, confirmation, itemCategoryList } = goods;\r\n  let unitTypeList = goods?.unitTypes?.data;\r\n  let categoryList = itemCategoryList?.data;\r\n  return {\r\n    error,\r\n    unitTypeList,\r\n    confirmation,\r\n    categoryList,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  submitFormItemCreate,\r\n  submitFormItemUpdate,\r\n  submitFormItemRemove,\r\n  resetItemCreateForm,\r\n  fetchCancelledSessions,\r\n})(ItemAdd);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ErrorDisplay from 'views/Common/ErrorDisplay';\r\nimport Spinner from 'views/Common/Spinner';\r\n\r\nimport {\r\n  fetchUnitTyps,\r\n  fetchItems,\r\n  fetchItemCategory,\r\n  fetchItemsReset,\r\n} from 'actions/goods';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport ItemAdd from './ItemAdd';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& .table--cell': {\r\n      fontSize: '13px',\r\n    },\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: '85%',\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n    borderRadius: '20px',\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  mainFont: {\r\n    color: '#004F8B',\r\n    'font-weight': 1000,\r\n  },\r\n  textBox: {\r\n    padding: '10px',\r\n  },\r\n  subtitle: {\r\n    color: '#848484',\r\n  },\r\n  tableHeader: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  tableHeaderTitle: {\r\n    display: 'flex',\r\n    gap: '20px',\r\n  },\r\n  tableCell: {\r\n    minWidth: 'fit-content',\r\n  },\r\n  confirmationDialog: {\r\n    padding: '20px',\r\n  },\r\n  confirmationActions: {\r\n    paddingTop: '20px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  deleteConfirmBtn: {\r\n    color: 'red',\r\n  },\r\n  cancellationMsg: {\r\n    width: '100%',\r\n    cursor: 'auto',\r\n    padding: '5px',\r\n  },\r\n  filterRow: {\r\n    display: 'flex',\r\n    alignItems: 'flex-end',\r\n  },\r\n  searchWrapper: {\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    display: \"flex\",\r\n  },\r\n  inputFeild: {\r\n    width: \"50%\",\r\n  },\r\n  highlightRow: {\r\n    background: '#a2a28b !important',\r\n  },\r\n  notHighlightRow: {\r\n\r\n  }\r\n}));\r\n\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: '#e6e6e6',\r\n    color: theme.palette.common.black,\r\n  },\r\n  body: {\r\n    fontSize: 15,\r\n  },\r\n}))(TableCell);\r\n\r\nconst ItemsList = ({\r\n  loading,\r\n  error,\r\n  loginSuccess,\r\n  isOpenAlertMsgProp,\r\n  fetchUnitTyps,\r\n  fetchUnitTypsList,\r\n  fetchItems,\r\n  itemsList,\r\n  categoryList,\r\n  fetchItemCategory,\r\n  fetchItemsReset,\r\n  totalCount,\r\n}) => {\r\n  useEffect(() => {\r\n    setWindowsDimentions();\r\n    fetchUnitTyps();\r\n    fetchItemCategory();\r\n  }, [fetchUnitTyps, fetchItemCategory]);\r\n\r\n  const classes = useStyles();\r\n  const [select, setSelection] = React.useState(null);\r\n  const [itemCategory, setItemCategory] = React.useState('');\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    if (itemCategory !== null) {\r\n      fetchItems({\r\n        categoryId: itemCategory?.id,\r\n        pageSize: rowsPerPage,\r\n        page: newPage,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    if (itemCategory !== null) {\r\n      fetchItems({\r\n        categoryId: itemCategory?.id,\r\n        pageSize: parseInt(event.target.value, 10),\r\n        page: 0,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleItemSelection = (selectedItem, ramdomId) => {\r\n    let obj = {\r\n      ramdomId: ramdomId,\r\n      select: selectedItem,\r\n    };\r\n    setSelection(obj);\r\n  };\r\n\r\n  const handleCategoryChange = (event, value) => {\r\n    setItemCategory(value || \"\");\r\n    if (value !== null) {\r\n      fetchItems({\r\n        categoryId: value?.id,\r\n        pageSize: rowsPerPage,\r\n        page: page,\r\n      });\r\n    }else{\r\n      fetchItemsReset();\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const [isMobile, setIsMobile] = React.useState(false);\r\n\r\n  window.addEventListener('resize', function () {\r\n    window.innerWidth < 600 ? setIsMobile(true) : setIsMobile(false);\r\n  });\r\n\r\n  window.addEventListener('load', function () {\r\n    window.innerWidth < 600 ? setIsMobile(true) : setIsMobile(false);\r\n  });\r\n\r\n  function setWindowsDimentions() {\r\n    window.innerWidth < 600 ? setIsMobile(true) : setIsMobile(false);\r\n  }\r\n\r\n  const updateItemList = () => {\r\n    setItemCategory('');\r\n    fetchItemsReset();\r\n    setSelection(null);\r\n  }\r\n\r\n  return !loginSuccess ? (\r\n    <Redirect to=\"/sign-in\" />\r\n  ) : loading ? (\r\n    <Spinner></Spinner>\r\n  ) : error ? (\r\n    <ErrorDisplay error={error} refreshButton={true}></ErrorDisplay>\r\n  ) : (\r\n    <div className={classes.root}>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          {isMobile === false ? (\r\n            \"\"\r\n          ) : (\r\n            <ItemAdd\r\n              seletedRowData={select}\r\n              setSelection={setSelection}\r\n              updateItemList={updateItemList}\r\n            />\r\n          )}\r\n          <div className={classes.tableHeader}>\r\n            <div className={classes.tableHeaderTitle}>\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h2\"\r\n                align=\"left\"\r\n                className={classes.mainFont}\r\n              >\r\n                Items\r\n              </Typography>\r\n\r\n            </div>\r\n            {isMobile === true ? (\r\n              \"\"\r\n            ) : (\r\n              <ItemAdd\r\n                seletedRowData={select}\r\n                setSelection={setSelection}\r\n                updateItemList={updateItemList}\r\n              />\r\n            )}\r\n          </div>\r\n          <br />\r\n          <br />\r\n          <div\r\n            style={{ height: \"100%\", width: \"100%\" }}\r\n            className={classes.root}\r\n          >\r\n            <div className={classes.searchWrapper}>\r\n              <Autocomplete\r\n                className={classes.inputFeild}\r\n                id=\"unitType\"\r\n                value={itemCategory}\r\n                options={categoryList}\r\n                getOptionLabel={(option) => option?.name || \"\"}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} variant=\"outlined\" />\r\n                )}\r\n                onChange={(event, newValue) => {\r\n                  handleCategoryChange(event, newValue);\r\n                }}\r\n              />\r\n            </div>\r\n            <br />\r\n            <br />\r\n\r\n            {totalCount === 0 ? (\r\n              <Typography component=\"h6\" variant=\"h6\" align=\"center\">\r\n                No Data\r\n              </Typography>\r\n            ) : (\r\n              <React.Fragment>\r\n                <TableContainer component={Paper}>\r\n                  <Table\r\n                    className={classes.table}\r\n                    aria-label=\"customized table\"\r\n                  >\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <StyledTableCell width={\"20%\"}>\r\n                          NAME\r\n                        </StyledTableCell>\r\n                        <StyledTableCell width={\"20%\"}>\r\n                          MINIMUM QUANTITY\r\n                        </StyledTableCell>\r\n                        <StyledTableCell width={\"20%\"}>\r\n                          TOTAL QUANTITY\r\n                        </StyledTableCell>\r\n                        <StyledTableCell width={\"10%\"}>\r\n                          UNIT\r\n                        </StyledTableCell>\r\n                        <StyledTableCell width={\"20%\"}>\r\n                          DESCRIPTION\r\n                        </StyledTableCell>\r\n                        <StyledTableCell width={\"10%\"}>\r\n                          ACTION\r\n                        </StyledTableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {itemsList.map((item, index) => (\r\n                        <StyledTableRow\r\n                          key={item.id}\r\n                           className={item?.minQuantity < item?.totalQuantity ? classes.notHighlightRow : classes.highlightRow}\r\n                        >\r\n                          <StyledTableCell component=\"th\" scope=\"row\">\r\n                            {item?.name}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell>\r\n                            {item?.minQuantity}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell>\r\n                            {item?.totalQuantity}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell>\r\n                            {item?.units?.name}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell>\r\n                            {item?.description}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell>\r\n                            <Button onClick={() => { handleItemSelection(item, Math.random()) }}>Edit</Button>\r\n                          </StyledTableCell>\r\n                        </StyledTableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[5, 10, 50]}\r\n                  component=\"div\"\r\n                  count={totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n        </Paper>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\n// mention the reducer\r\nfunction mapStateToProps({ goods, signin }) {\r\n  // what inside the reducer\r\n  let loginSuccess = sessionStorage.getItem('loginSuccess');\r\n  let { loading, items, itemCategoryList } = goods;\r\n  let categoryList = itemCategoryList?.data;\r\n  return {\r\n    loginSuccess,\r\n    loading: loading,\r\n    error: null,\r\n    itemsList: items.content,\r\n    totalCount: items.totalCount,\r\n    categoryList,\r\n  };\r\n}\r\n\r\n// bind the actions here in a object\r\nexport default connect(mapStateToProps, {\r\n  fetchUnitTyps,\r\n  fetchItems,\r\n  fetchItemCategory,\r\n  fetchItemsReset,\r\n})(ItemsList);\r\n","import React from 'react';\r\nimport { Switch, Redirect, Route } from 'react-router-dom';\r\n\r\nimport { RouteWithLayout } from './components';\r\nimport { Minimal as MinimalLayout } from './layouts';\r\n\r\nimport {\r\n    SignIn as SignInView,\r\n    NotFound as NotFoundView,\r\n    ItemInventory as ItemInventoryView,\r\n    ItemsList as ItemsListView,\r\n} from './views';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Redirect exact from=\"/\" to=\"/sign-in\" />\r\n            <Route path=\"/health\">\r\n                <h3>Hey There!!! The App is Healthy</h3>\r\n            </Route>\r\n            <RouteWithLayout\r\n                component={SignInView}\r\n                exact\r\n                layout={MinimalLayout}\r\n                path=\"/sign-in\"\r\n            />\r\n            <RouteWithLayout\r\n                component={ItemInventoryView}\r\n                exact\r\n                layout={MinimalLayout}\r\n                path=\"/update-inventory\"\r\n            />\r\n            <RouteWithLayout\r\n                component={ItemsListView}\r\n                exact\r\n                layout={MinimalLayout}\r\n                path=\"/item-list\"\r\n            />\r\n            <RouteWithLayout\r\n                component={NotFoundView}\r\n                exact\r\n                layout={MinimalLayout}\r\n                path=\"/not-found\"\r\n            />\r\n            {/* <Redirect to=\"/not-found\" /> */}\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_BACKEND_URL;\r\n\r\nexport default function setupAxios() {\r\n    axios.interceptors.request.use(\r\n        // setting headers to requests sent via this application\r\n        config => {\r\n            config.headers['Authorization'] = sessionStorage.getItem('token');\r\n            return config;\r\n        },\r\n        error => {\r\n            return Promise.reject(error);\r\n        }\r\n    );\r\n    createAxiosResponseInterceptor();\r\n}\r\n\r\nconst createAxiosResponseInterceptor = () => {\r\n    axios.interceptors.response.use(\r\n        response => {\r\n            return response;\r\n        },\r\n        async error => {\r\n            let errorResponse = error.response;\r\n            if (errorResponse && errorResponse.status === 401) {\r\n            }\r\n            return Promise.reject(error);\r\n        }\r\n    );\r\n};\r\n","import {\r\n    FETCH_REFRESH_TOKEN,\r\n    FETCH_REFRESH_TOKEN_SUCCESS,\r\n    FETCH_REFRESH_TOKEN_FAILED,\r\n    RESET_REFRESH_TOKEN,\r\n} from './types';\r\n\r\nexport const getRefreshToken = payload => {\r\n    return { type: FETCH_REFRESH_TOKEN, payload };\r\n};\r\n\r\nexport const getRefreshTokenSuccess = payload => {\r\n    return { type: FETCH_REFRESH_TOKEN_SUCCESS, payload };\r\n};\r\n\r\nexport const getRefreshTokenFailed = payload => {\r\n    return { type: FETCH_REFRESH_TOKEN_FAILED, payload };\r\n};\r\n\r\nexport const resetGetRefreshToken = payload => {\r\n    return { type: RESET_REFRESH_TOKEN, payload };\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport validate from 'validate.js';\r\n\r\nimport theme from './theme';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport './assets/scss/index.scss';\r\nimport validators from './common/validators';\r\nimport Routes from './Routes';\r\nimport setupAxios from './utils/axios';\r\n\r\nimport IdleTimer from 'react-idle-timer'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { logout } from 'actions/signin';\r\nimport { getRefreshToken } from 'actions/token';\r\n\r\nconst browserHistory = createBrowserHistory();\r\n\r\nvalidate.validators = {\r\n    ...validate.validators,\r\n    ...validators,\r\n};\r\n\r\nsetupAxios();\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.idleTimer = null\r\n        this.handleOnAction = this.handleOnAction.bind(this)\r\n        this.handleOnActive = this.handleOnActive.bind(this)\r\n        this.handleOnIdle = this.handleOnIdle.bind(this)\r\n    }\r\n\r\n    handleOnAction(event) {\r\n        if(sessionStorage.getItem('loginSuccess')){\r\n          \r\n        }\r\n    }\r\n\r\n    handleOnActive(event) {\r\n      \r\n    }\r\n\r\n    handleOnIdle(event) {\r\n        if(sessionStorage.getItem('loginSuccess')){\r\n            sessionStorage.removeItem('token');\r\n            sessionStorage.removeItem('loginSuccess');\r\n            sessionStorage.removeItem('mobile');\r\n            window.location = '/sign-in';\r\n            this.props.logout();\r\n        }\r\n       \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <IdleTimer\r\n                    ref={ref => { this.idleTimer = ref }}\r\n                    timeout={1000 * 60 * 60}\r\n                    onActive={this.handleOnActive}\r\n                    onIdle={this.handleOnIdle}\r\n                    onAction={this.handleOnAction}\r\n                    debounce={250}\r\n                />\r\n\r\n                <ThemeProvider theme={theme}>\r\n                    <Router history={browserHistory}>\r\n                        <Routes />\r\n                    </Router>\r\n                </ThemeProvider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps({ signin }) {\r\n    let { loginsuccess } = signin;\r\n    return {\r\n        loginsuccess,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout , getRefreshToken})(App);\r\n","import {\r\n    LOGIN_WITH_USER_PASS,\r\n    LOGIN_WITH_USER_PASS_SUCCESS,\r\n    LOGIN_WITH_USER_PASS_FAILED,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: undefined,\r\n    loginSuccess: false,\r\n};\r\n\r\nconst signinReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_WITH_USER_PASS:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case LOGIN_WITH_USER_PASS_SUCCESS:\r\n            sessionStorage.setItem('token', action.payload.token);\r\n            sessionStorage.setItem('loginSuccess', true);\r\n            sessionStorage.setItem('loginSuccessTime', new Date());\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loginSuccess: true\r\n            };\r\n        case LOGIN_WITH_USER_PASS_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loginSuccess: false,\r\n                error: 'Try again.',\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default signinReducer;\r\n","import {\r\n    FETCH_UNIT_TYPE,\r\n    FETCH_UNIT_TYPE_SUCCESS,\r\n    FETCH_UNIT_TYPE_FAILED,\r\n    SUBMIT_FORM_ITEM_SUCCESS,\r\n    SUBMIT_FORM_ITEM_FAILED,\r\n    UPDATE_FORM_ITEM_SUCCESS,\r\n    UPDATE_FORM_ITEM_FAILED,\r\n    RESET_FORM_ITEM_SUCCESS,\r\n    FETCH_ITEMS,\r\n    FETCH_ITEMS_SUCCESS,\r\n    FETCH_ITEMS_FAILED,\r\n    DELETE_FORM_ITEM,\r\n    DELETE_FORM_ITEM_SUCCESS,\r\n    DELETE_FORM_ITEM_FAILED,\r\n    FETCH_CATEGORY,\r\n    FETCH_CATEGORY_SUCCESS,\r\n    FETCH_CATEGORY_FAILED,\r\n    FETCH_ITEMS_RESET,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: undefined,\r\n\r\n    unitTypes:{\r\n        data: [],\r\n        loading: false,\r\n    },\r\n    confirmation: {\r\n        payload: {},\r\n        error: undefined,\r\n    },\r\n    items: {\r\n        totalCount: 0,\r\n        totalPage: 0,\r\n        pageSize: 0,\r\n        page:0,\r\n        content: []\r\n    },\r\n    itemCategoryList: {\r\n        data: [],\r\n        loading: false,\r\n    }\r\n};\r\n\r\nconst goodsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_UNIT_TYPE:\r\n            return {\r\n                ...state,\r\n                loading :true,\r\n            };\r\n        case FETCH_UNIT_TYPE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                unitTypes: {\r\n                    ...state.unitTypes,\r\n                    data : action.payload.body,\r\n                    loading: false,\r\n                }\r\n            };\r\n        case FETCH_UNIT_TYPE_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: \"Fetch unit types failed.\",\r\n                unitTypes: {\r\n                    ...state.unitTypes,\r\n                    data : [],\r\n                    loading: false,\r\n                }\r\n        };\r\n\r\n        case SUBMIT_FORM_ITEM_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: undefined,\r\n                confirmation: {\r\n                    ...state.confirmation,\r\n                    loading: false,\r\n                    payload: action.payload,\r\n                    error: undefined,\r\n                },\r\n            };\r\n        case SUBMIT_FORM_ITEM_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error_msg,\r\n                confirmation: {\r\n                    ...state.confirmation,\r\n                    loading: false,\r\n                    error: action.payload.error_msg,\r\n                    payload: {},\r\n                },\r\n            };\r\n\r\n        case UPDATE_FORM_ITEM_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                confirmation: {\r\n                    ...state.confirmation,\r\n                    loading: false,\r\n                    payload: action.payload,\r\n                    error: undefined,\r\n                },\r\n            };\r\n        case UPDATE_FORM_ITEM_FAILED:\r\n            return {\r\n                ...state,\r\n                confirmation: {\r\n                    ...state.confirmation,\r\n                    loading: false,\r\n                    error: action.payload.error_msg,\r\n                    payload: action.payload,\r\n                },\r\n            };\r\n\r\n        case RESET_FORM_ITEM_SUCCESS:\r\n            return {\r\n                ...state,\r\n                confirmation: {\r\n                    ...state.confirmation,\r\n                    error:undefined,\r\n                    loading: false,\r\n                    payload: '',\r\n                },\r\n            };\r\n        \r\n        case FETCH_ITEMS:\r\n            return {\r\n                ...state,\r\n                loading :true,\r\n            };\r\n        case FETCH_ITEMS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                items: {\r\n                    ...state.items,\r\n                    totalCount: action.payload.body.totalCount,\r\n                    totalPage: action.payload.body.totalPage,\r\n                    pageSize: action.payload.body.pageSize,\r\n                    page: action.payload.body.page,\r\n                    content : action.payload.body.content,\r\n                }\r\n            };\r\n        case FETCH_ITEMS_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: \"Fetch items failed.\",\r\n                items: {\r\n                    ...state.items,\r\n                    totalCount: 0,\r\n                    totalPage: 0,\r\n                    pageSize: 0,\r\n                    page:0,\r\n                    content : [],\r\n                }\r\n        };\r\n        case FETCH_ITEMS_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: undefined,\r\n                items: {\r\n                    ...state.items,\r\n                    totalCount: 0,\r\n                    totalPage: 0,\r\n                    pageSize: 0,\r\n                    page:0,\r\n                    content : [],\r\n                }\r\n        };\r\n\r\n\r\n        case DELETE_FORM_ITEM:\r\n            return {\r\n                ...state,\r\n                loading :true,\r\n            };\r\n        case DELETE_FORM_ITEM_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: undefined,\r\n                confirmation: {\r\n                    ...state.confirmation,\r\n                    loading: false,\r\n                    payload: action.payload,\r\n                },\r\n            };\r\n        case DELETE_FORM_ITEM_FAILED:\r\n            return {\r\n                ...state,\r\n                confirmation: {\r\n                    ...state.confirmation,\r\n                    loading: false,\r\n                    payload: action.payload,\r\n                },\r\n            };\r\n\r\n        case FETCH_CATEGORY:\r\n            return {\r\n                ...state,\r\n                loading :true,\r\n            };\r\n        case FETCH_CATEGORY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                itemCategoryList: {\r\n                    ...state.itemCategoryList,\r\n                    data : action.payload.body,\r\n                    loading: false,\r\n                }\r\n            };\r\n        case FETCH_CATEGORY_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: \"Fetch category types failed.\",\r\n                itemCategoryList: {\r\n                    ...state.itemCategoryList,\r\n                    data : [],\r\n                    loading: false,\r\n                }\r\n        };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default goodsReducer;\r\n","import {\r\n    FETCH_REFRESH_TOKEN,\r\n    FETCH_REFRESH_TOKEN_SUCCESS,\r\n    FETCH_REFRESH_TOKEN_FAILED,\r\n    RESET_REFRESH_TOKEN,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: undefined,\r\n    token: undefined\r\n};\r\n\r\nconst tokenReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_REFRESH_TOKEN:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case FETCH_REFRESH_TOKEN_SUCCESS:\r\n            sessionStorage.setItem(\"token\" ,action.payload.token )\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n              //  token: action.payload,\r\n            };\r\n        case FETCH_REFRESH_TOKEN_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error:\r\n                    'Request Token Failed',\r\n            };\r\n        case RESET_REFRESH_TOKEN:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: undefined,\r\n                token: undefined,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default tokenReducer;\r\n\r\n","import {\r\n    FETCH_LOOKUP_ITEMS,\r\n    FETCH_LOOKUP_ITEMS_SUCCESS,\r\n    FETCH_LOOKUP_ITEMS_FAILED,\r\n    FETCH_LOOKUP_ITEMS_RESET,\r\n    CREATE_INVENTORY_SUCCESS,\r\n    CREATE_INVENTORY_FAILED,\r\n    CREATE_INVENTORY_RESET,\r\n    FETCH_INVENTORY,\r\n    FETCH_INVENTORY_SUCCESS,\r\n    FETCH_INVENTORY_FAILED,\r\n    FETCH_INVENTORY_RESET,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: undefined,\r\n    nameLookups: {\r\n        data: [],\r\n    },\r\n    confirmation: {\r\n        payload: {},\r\n        error: undefined,\r\n    },\r\n    inventory: {\r\n        content: [],\r\n        page: 0,\r\n        pageSize: 0,\r\n        totalCount: 0,\r\n        totalPage: 0,\r\n    }\r\n\r\n};\r\n\r\nconst ItemInventoryReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_LOOKUP_ITEMS:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case FETCH_LOOKUP_ITEMS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                nameLookups: {\r\n                    ...state.nameLookups,\r\n                    data: action?.payload?.body,\r\n                }\r\n            };\r\n        case FETCH_LOOKUP_ITEMS_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: 'Fetch items failed.',\r\n                nameLookups: {\r\n                    ...state.nameLookups,\r\n                    data: [],\r\n                }\r\n            };\r\n        case FETCH_LOOKUP_ITEMS_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: undefined,\r\n                nameLookups: {\r\n                    ...state.nameLookups,\r\n                    data: [],\r\n                }\r\n            };\r\n\r\n        case CREATE_INVENTORY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: undefined,\r\n                confirmation: {\r\n                    ...state.confirmation,\r\n                    loading: false,\r\n                    payload: action.payload,\r\n                    error: undefined,\r\n                },\r\n            };\r\n        case CREATE_INVENTORY_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.statusMessage,\r\n                confirmation: {\r\n                    ...state.confirmation,\r\n                    loading: false,\r\n                    error: action.payload.statusMessage,\r\n                    payload: {},\r\n                },\r\n            };\r\n        case CREATE_INVENTORY_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: undefined,\r\n                confirmation: {\r\n                    ...state.confirmation,\r\n                    loading: false,\r\n                    payload: {},\r\n                },\r\n            };\r\n\r\n        case FETCH_INVENTORY:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case FETCH_INVENTORY_SUCCESS:\r\n            console.log(action?.payload)\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                inventory: {\r\n                    ...state.inventory,\r\n                    content: action?.payload?.body?.content,\r\n                    page: action?.payload?.body?.page,\r\n                    pageSize: action?.payload?.body?.pageSize,\r\n                    totalCount: action?.payload?.body?.totalCount,\r\n                    totalPage: action?.payload?.body?.totalPage,\r\n                }\r\n            };\r\n        case FETCH_INVENTORY_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: 'Fetch items failed.',\r\n                inventory: {\r\n                    ...state.inventory,\r\n                    content: [],\r\n                    page: 0,\r\n                    pageSize: 0,\r\n                    totalCount: 0,\r\n                    totalPage: 0,\r\n                }\r\n            };\r\n        case FETCH_INVENTORY_RESET:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: undefined,\r\n                inventory: {\r\n                    ...state.inventory,\r\n                    content: [],\r\n                    page: 0,\r\n                    pageSize: 0,\r\n                    totalCount: 0,\r\n                    totalPage: 0,\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ItemInventoryReducer;\r\n","import { combineReducers } from 'redux';\r\nimport signinReducer from './signin';\r\nimport goodsReducer from './goods';\r\nimport tokenReducer from './token';\r\nimport ItemInventoryReducer from './ItemInventory';\r\n\r\n/**\r\n * Redux Store\r\n */\r\n\r\n// list the reducers list\r\nexport default combineReducers({\r\n    signin: signinReducer,\r\n    goods: goodsReducer,\r\n    token: tokenReducer,\r\n    itemInventory: ItemInventoryReducer,\r\n});\r\n","import axios from 'axios';\r\n\r\nexport default {\r\n    login: {\r\n        loginApi: payload =>\r\n            axios.post(`api/auth/signin`, { ...payload }).then(res => res.data)\r\n    }\r\n};\r\n","import { call, all, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport signInApi from '../services/signInApi';\r\n\r\nimport { LOGIN_WITH_USER_PASS } from '../actions/types';\r\n\r\nimport {\r\n    loginWithUserPassSuccess,\r\n    loginWithUserPassFailed\r\n} from '../actions/signin';\r\n\r\n/**\r\n * sign in saga implementation\r\n */\r\nfunction* loginWithUserPassSaga({ payload }) {\r\n    try {\r\n        let data = yield call(signInApi.login.loginApi, payload);\r\n        yield put(loginWithUserPassSuccess(data));\r\n    } catch (err) {\r\n        yield put(loginWithUserPassFailed(err));\r\n    }\r\n}\r\n\r\n/* function* logout() {\r\n    try {\r\n        yield put(logoutSuccess());\r\n    } catch (err) {}\r\n} */\r\n\r\nfunction* watchSignInActions() {\r\n    yield takeLatest(LOGIN_WITH_USER_PASS, loginWithUserPassSaga);\r\n    //yield takeLatest(LOGOUT, logout);\r\n}\r\n\r\nexport default function* signInSaga() {\r\n    yield all([watchSignInActions()]);\r\n}\r\n","import axios from 'axios';\r\n\r\nexport default {\r\n    Items: {\r\n        submit: payload =>\r\n            axios\r\n                .post(\r\n                    `/items`,\r\n                    {\r\n                        ...payload,\r\n                    })\r\n                .then(res => res.data),\r\n        update: payload =>\r\n            axios\r\n                .put(\r\n                    `/items/${payload.id}`,\r\n                    {\r\n                        ...payload,\r\n                    })\r\n                .then(res => res.data),\r\n        delete: payload =>\r\n            axios\r\n                .delete(\r\n                    `/items/${payload.id}`,\r\n\r\n                    {\r\n                        headers: {\r\n                            Authorization: sessionStorage.getItem('token'),\r\n                        },\r\n                        data: {\r\n                            ...payload,\r\n                        },\r\n                    }\r\n                )\r\n                .then(res => res.data),\r\n        getAll: payload =>\r\n            axios\r\n                .get(`/items/all/${payload.categoryId}/${payload.pageSize}/${payload.page}`,\r\n                {\r\n                    ...payload,\r\n                })\r\n                .then(res => res.data),\r\n    },\r\n    units: {\r\n        unitTypes: () =>\r\n            axios\r\n                .get('/items/unitList')\r\n                .then(res => res.data),\r\n    },\r\n    Category: {\r\n        categoryList: () =>\r\n            axios\r\n                .get('/items/itemCategoryList')\r\n                .then(res => res.data),\r\n    }\r\n};\r\n","import { call, all, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport sessionApi from '../services/goodsApi';\r\n\r\nimport {\r\n    FETCH_SESSIONS,\r\n    FETCH_DISTRICT,\r\n    NOTIFY_ALL,\r\n    CANCEL_SESSION,\r\n    FETCH_CANCELLED_SESSIONS,\r\n\r\n\r\n    FETCH_UNIT_TYPE,\r\n    SUBMIT_FORM_ITEM,\r\n    UPDATE_FORM_ITEM,\r\n    RESET_FORM_ITEM,\r\n    FETCH_ITEMS,\r\n    DELETE_FORM_ITEM,\r\n    FETCH_CATEGORY,\r\n} from '../actions/types';\r\nimport {\r\n    fetchDistrictFailed,\r\n    fetchDistrictSuccess,\r\n    fetchSessionsSuccess,\r\n    fetchSessionsFailed,\r\n    notifyAllSuccess,\r\n    notifyAllFailed,\r\n    cancelSessionSuccess,\r\n    cancelSessionFailed,\r\n    fetchCancelledSessionsSuccess,\r\n    fetchCancelledSessionsFailed,\r\n\r\n\r\n    fetchUnitTypsFailed,\r\n    fetchUnitTypesSuccess,\r\n    submitFormItemCreateSuccess,\r\n    submitFormItemCreateFailed,\r\n    submitFormItemUpdateSuccess,\r\n    submitFormItemUpdateFailed,\r\n    restFormItemSuccess,\r\n    fetchItemsSuccess,\r\n    fetchItemsFailed,\r\n    submitFormItemRemoveSuccess,\r\n    submitFormItemRemoveFailed,\r\n    fetchItemCategorySuccess,\r\n    fetchItemCategoryFailed,\r\n} from 'actions/goods';\r\n\r\nfunction* fetchItems({ payload }) {\r\n    try {\r\n        const data = yield call(sessionApi.Items.getAll,payload);\r\n        if(data.status){\r\n            yield put(fetchItemsSuccess(data));\r\n        }else{\r\n            yield put(fetchItemsFailed(data));\r\n        }\r\n    } catch (err) {\r\n        let data = {\r\n            \"data\": [],\r\n            \"status\": false,\r\n            \"statusMessage\": \"\",\r\n            \"error_code\": null\r\n        }\r\n        yield put(fetchItemsFailed(data));\r\n    }\r\n}\r\n\r\nfunction* notifyAllUsers({ payload }) {\r\n    try {\r\n        const data = yield call(sessionApi.notify.notifyAll, payload);\r\n        if(data?.status){\r\n            yield put(notifyAllSuccess(data));\r\n        }else{\r\n            yield put(notifyAllFailed(data));\r\n        }\r\n         \r\n    } catch (err) {\r\n        let data = {\r\n            status : false,\r\n            error_msg: \"Fail to send SMS\",\r\n            error_code: \"\",\r\n            timestamp : \"\",\r\n        }\r\n        yield put(notifyAllFailed(data));\r\n    }\r\n}\r\n\r\n/** Fetch Disctricts master data */\r\nfunction* fetchDistricts() {\r\n    try {\r\n        const data = yield call(sessionApi.districts.getDistricts);\r\n        if(data.status){\r\n            yield put(fetchDistrictSuccess(data));\r\n        }else {\r\n            yield put(fetchDistrictFailed(data));\r\n        }\r\n    } catch (err) {\r\n        let data = {\r\n            \"data\": [],\r\n            \"status\": false,\r\n            \"error_msg\": \"\",\r\n            \"timestamp\": \"2021-06-11 15:29:52.196\",\r\n            \"error_code\": null\r\n        }\r\n        yield put(fetchDistrictFailed(data));\r\n    }\r\n}\r\n\r\nfunction* fetchSessionsData({payload}) {\r\n    try {\r\n        const data = yield call(sessionApi.sessions.getAll,payload);\r\n        if(data.status){\r\n            yield put(fetchSessionsSuccess(data));\r\n        }else{\r\n            yield put(fetchSessionsFailed(data));\r\n        }\r\n    } catch (err) {\r\n        let data = {\r\n            \"data\": [],\r\n            \"status\": true,\r\n            \"error_msg\": null,\r\n            \"timestamp\": \"2021-06-13 09:54:38.022\",\r\n            \"error_code\": null\r\n        }\r\n        yield put(fetchSessionsFailed(data));\r\n    }\r\n}\r\n\r\nfunction* deleteItemFormData({ payload }) {\r\n    try {\r\n        const data = yield call(sessionApi.Items.delete, payload);\r\n        if(data.status){\r\n            yield put(submitFormItemRemoveSuccess(data));\r\n        }else{\r\n            yield put(submitFormItemRemoveFailed(data));\r\n        }\r\n    } catch (err) {\r\n        let data = {\r\n            \"data\": [],\r\n            \"status\": false,\r\n            \"statusMessage\": \"The session delete failed.\",\r\n            \"error_code\": null\r\n        } \r\n        yield put(submitFormItemRemoveFailed(data));\r\n    }\r\n}\r\n\r\nfunction* resetItemForm() {\r\n    //yield put(fetchCancelledSessions());\r\n    yield put(restFormItemSuccess());\r\n}\r\n\r\nfunction* cancelSessions({payload}) {\r\n    try {\r\n        const data = yield call(sessionApi.cancel.cancelSessions,payload);\r\n        if(data?.status){\r\n            yield put(cancelSessionSuccess(data));\r\n        }else{\r\n            yield put(cancelSessionFailed(data));\r\n        }\r\n    } catch (err) {\r\n        let data = {\r\n            \"data\": [],\r\n            \"status\": false,\r\n            \"error_msg\": \"The session cancellation failed.\",\r\n            \"timestamp\": \"2021-06-05 12:28:06.465\",\r\n            \"error_code\": null\r\n        }\r\n        yield put(cancelSessionFailed(data));\r\n    }\r\n}\r\n\r\nfunction* fetchCancelledSessionsList() {\r\n    try {\r\n        let data = yield call(sessionApi.cancel.getCancelledSessionList);\r\n        if(data?.status){\r\n            yield put(fetchCancelledSessionsSuccess(data));\r\n        }else{\r\n            yield put(fetchCancelledSessionsFailed(data));\r\n        }\r\n    } catch (err) {\r\n        let data = {\r\n            \"data\": [],\r\n            \"status\": false,\r\n            \"error_msg\": null,\r\n            \"timestamp\": \"2021-06-15 14:55:58.892\",\r\n            \"error_code\": null\r\n        }\r\n        yield put(fetchCancelledSessionsFailed(data));\r\n    }\r\n}\r\n/**---------------------------------------------------------- */\r\nfunction* fetchUnitTypes() {\r\n    try {\r\n        const data = yield call(sessionApi.units.unitTypes);\r\n        if(data?.status){\r\n            yield put(fetchUnitTypesSuccess(data));\r\n        }else{\r\n            yield put(fetchUnitTypsFailed(data));\r\n        }\r\n    } catch (err) {\r\n        let data = {\r\n            \"data\": {},\r\n            \"status\": false,\r\n            \"error_msg\": null,\r\n            \"timestamp\": \"2021-06-05 12:28:06.465\",\r\n            \"error_code\": null\r\n        }\r\n        yield put(fetchUnitTypsFailed(data));\r\n    }\r\n}\r\n\r\nfunction* submitFormItem({ payload }) {\r\n    try {\r\n        const data = yield call(sessionApi.Items.submit, payload);\r\n        if(data.status){\r\n           // yield put(fetchSessions());\r\n            yield put(submitFormItemCreateSuccess(data));\r\n        }else{\r\n            yield put(submitFormItemCreateFailed(data));\r\n        }\r\n    } catch (err) {\r\n        let data = {statusMessage: \"Error occurred when creating the Item.\"}\r\n        yield put(submitFormItemCreateFailed(data));\r\n    }\r\n}\r\n\r\nfunction* updateFormItem({ payload }) {\r\n    try {\r\n        let data = yield call(sessionApi.Items.update, payload);\r\n        if(data.status){\r\n            //yield put(fetchSessions());\r\n            yield put(submitFormItemUpdateSuccess(data));\r\n        }else{\r\n            yield put(submitFormItemUpdateFailed(data));\r\n        }\r\n    } catch (err) {\r\n        let data = {error_msg: \"Error occurred when updating the item.\"}\r\n        yield put(submitFormItemUpdateFailed(data));\r\n    }\r\n}\r\n\r\nfunction* fetchItemCategory({ payload }) {\r\n    try {\r\n        let data = yield call(sessionApi.Category.categoryList);\r\n        if(data.status){\r\n            yield put(fetchItemCategorySuccess(data));\r\n        }else{\r\n            yield put(fetchItemCategoryFailed(data));\r\n        }\r\n    } catch (err) {\r\n        let data = {error_msg: \"Error occurred when fetch item categories.\"}\r\n        yield put(fetchItemCategoryFailed(data));\r\n    }\r\n}\r\n\r\nfunction* watchSessionActions() {\r\n    // takeevery\r\n    yield takeLatest(FETCH_DISTRICT, fetchDistricts);\r\n    yield takeLatest(FETCH_SESSIONS, fetchSessionsData);\r\n    yield takeLatest(NOTIFY_ALL, notifyAllUsers);\r\n    yield takeLatest(CANCEL_SESSION, cancelSessions);\r\n    yield takeLatest(FETCH_CANCELLED_SESSIONS, fetchCancelledSessionsList);\r\n    \r\n    yield takeLatest(DELETE_FORM_ITEM, deleteItemFormData);\r\n    yield takeLatest(FETCH_ITEMS, fetchItems);\r\n    yield takeLatest(RESET_FORM_ITEM, resetItemForm);\r\n    yield takeLatest(UPDATE_FORM_ITEM, updateFormItem);\r\n    yield takeLatest(SUBMIT_FORM_ITEM, submitFormItem);\r\n    yield takeLatest(FETCH_UNIT_TYPE, fetchUnitTypes);\r\n    yield takeLatest(FETCH_CATEGORY, fetchItemCategory);\r\n}\r\n\r\nexport default function* GoodsSaga() {\r\n    yield all([watchSessionActions()]);\r\n}\r\n","import axios from 'axios';\r\n\r\nexport default {\r\n    token: {\r\n        getToken: payload =>\r\n            axios.get(`/getRefreshToken`).then(res => res),\r\n    },\r\n};\r\n","import { call, all, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport tokenApi from '../services/token';\r\n\r\nimport { \r\n    FETCH_REFRESH_TOKEN,\r\n    LOGOUT\r\n } from '../actions/types';\r\n\r\nimport {\r\n    getRefreshTokenSuccess,\r\n    getRefreshTokenFailed,\r\n} from '../actions/token';\r\n\r\nimport {logout} from '../actions/signin'\r\n\r\n/**\r\n * token in saga implementation\r\n */\r\nfunction* getTokenSaga({ payload }) {\r\n    try {\r\n        const data = yield call(tokenApi.token.getToken);\r\n        if(data.status === 200){\r\n            yield put(getRefreshTokenSuccess(data.data));\r\n        }else{\r\n            yield put(getRefreshTokenFailed(data.data));\r\n            yield put(logout());\r\n            const win = window.open(\"/\",\"_self\");\r\n        }\r\n    } catch (err) {\r\n        //yield put(logout());\r\n        window.location.href=\"/\";\r\n        sessionStorage.clear();\r\n        //yield put(getRefreshTokenFailed(err));\r\n    }\r\n}\r\n\r\nfunction* watchTokenActions() {\r\n    yield takeLatest(FETCH_REFRESH_TOKEN, getTokenSaga);\r\n    yield takeLatest(LOGOUT, logout);\r\n}\r\n\r\nexport default function* tokenSaga() {\r\n    yield all([watchTokenActions()]);\r\n}\r\n","import axios from 'axios';\r\n\r\nexport default {\r\n    items: {\r\n        fetchLookupData: payload =>\r\n            axios.get(\r\n                `/item-inventory/lookup/${payload}`)\r\n            .then(res => res.data),\r\n        \r\n        createInventory: payload => \r\n                axios.post(\r\n                    `/item-inventory/create`,\r\n                    {\r\n                        ...payload\r\n                    }\r\n                )\r\n            .then(res => res.data),\r\n        \r\n        fetchInvenoryList: payload =>\r\n            axios.get(\r\n                `/item-inventory/getAll/${payload?.item}/${payload?.inventoryType}/${payload?.pageSize}/${payload?.pageNo}`)\r\n            .then(res => res.data),\r\n    },\r\n};","import { call, all, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport { \r\n    FETCH_LOOKUP_ITEMS,\r\n    CREATE_INVENTORY,\r\n    FETCH_INVENTORY,\r\n } from '../actions/types';\r\n\r\nimport {\r\n    getLookupValuesSuccess,\r\n    getLookupValuesFailed,\r\n    submitItemInventoryCreateSuccess,\r\n    submitItemInventoryCreateFailed,\r\n    getInventoryListSuccess,\r\n    getInventoryListFailed,\r\n} from '../actions/ItemInventory';\r\n\r\nimport itemInventory from 'services/ItemInventory';\r\n\r\nfunction* fetchItemsLookup({ payload }) {\r\n    try {\r\n        const data = yield call(itemInventory.items.fetchLookupData,payload);        \r\n        if(data?.status === true){\r\n            yield put(getLookupValuesSuccess(data));\r\n        }else{\r\n            yield put(getLookupValuesFailed(data));\r\n        }\r\n    } catch (err) {\r\n        const data = {\r\n            data : [],\r\n            status: true,\r\n            statusMessage: \"ERROR\",\r\n        }\r\n        yield put(getLookupValuesFailed(data));\r\n    }\r\n}\r\n\r\nfunction* createInventory({ payload }) {\r\n    try {\r\n        const data = yield call(itemInventory.items.createInventory,payload);        \r\n        if(data?.status === true){\r\n            yield put(submitItemInventoryCreateSuccess(data));\r\n        }else{\r\n            yield put(submitItemInventoryCreateFailed(data));\r\n        }\r\n    } catch (err) {\r\n        const data = {\r\n            data : [],\r\n            status: true,\r\n            statusMessage: \"ERROR\",\r\n        }\r\n        yield put(submitItemInventoryCreateFailed(data));\r\n    }\r\n}\r\n\r\nfunction* fetchInventoryList({ payload }) {\r\n    try {\r\n        const data = yield call(itemInventory.items.fetchInvenoryList,payload);        \r\n        if(data?.status === true){\r\n            yield put(getInventoryListSuccess(data));\r\n        }else{\r\n            yield put(getInventoryListFailed(data));\r\n        }\r\n    } catch (err) {\r\n        const data = {\r\n            content: [],\r\n            page: 0,\r\n            pageSize: 0,\r\n            totalCount: 0,\r\n            totalPage: 0,\r\n            statusMessage: \"ERROR\",\r\n        }\r\n        yield put(getInventoryListFailed(data));\r\n    }\r\n}\r\n\r\n\r\nfunction* watchLocationActions() {\r\n    yield takeLatest(FETCH_LOOKUP_ITEMS, fetchItemsLookup);\r\n    yield takeLatest(CREATE_INVENTORY, createInventory);\r\n    yield takeLatest(FETCH_INVENTORY, fetchInventoryList);\r\n}\r\n\r\nexport default function* locationSaga() {\r\n    yield all([watchLocationActions()]);\r\n}\r\n","import signInSaga from './signIn';\r\nimport GoodsSaga from './goods';\r\nimport tokenSaga from './token';\r\nimport ItemInventory from './ItemInventory';\r\n\r\n/**\r\n * Add new sagas here\r\n */\r\nconst sagas = [signInSaga, GoodsSaga, tokenSaga, ItemInventory];\r\n\r\n/**\r\n * Combine sagas for redux middleware\r\n */\r\nexport default sagaMiddleware => {\r\n    sagas.forEach(saga => {\r\n        sagaMiddleware.run(saga);\r\n    });\r\n};\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { createLogger } from 'redux-logger';\r\n\r\nimport reducers from './reducers';\r\nimport registerSagasWithMiddleware from './sagas';\r\n\r\nconst loggerMiddleware = createLogger();\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport const store = createStore(\r\n    reducers,\r\n    {},\r\n    applyMiddleware(sagaMiddleware, loggerMiddleware)\r\n);\r\nregisterSagasWithMiddleware(sagaMiddleware);\r\n\r\nexport default ({ children }) => {\r\n    return <Provider store={store}>{children}</Provider>;\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport Root from 'Root';\r\n\r\nReactDOM.render(\r\n    <Root>\r\n        <App />\r\n    </Root>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}